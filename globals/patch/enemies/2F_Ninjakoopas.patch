#new:IntTable $ActorIDs_Ninja {
 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
}

#define .Actor:KoopaG *Array[0]
#define .Actor:KoopaY *Array[1]
#define .Actor:KoopaB *Array[2]
#define .Actor:KoopaR *Array[3]
#define .Actor:FakeBowser *Array[4]

% Use this as $End
#new:Data $Extra {
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 00000000
}

% Fake Bowser Data
% This actor is the one who controls each koopa too

#export:Actor $2F_FakeBowser {
% stats
[Index]        99b 
[Level]         0`b 
[MaxHP]        10`b 
[Coins]         0`b 
[Flags]       00000004 
[StatusTable] $StatusTable_8021A690_07 
% ai
[PartsCount]   11`s 
[PartsTable]  $PartsTable_8021A748_07 
[Script]      $Script_Init_8021A968_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        -71`b 125`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:Function:Battle $Function_8021837C_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        RA, 18 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  JAL       ~Func:get_actor
   18:  COPY      A0, V0
   1C:  LWC1      F4, 18 (V0)
   20:  LIF       F0, 15.0
   28:  LWC1      F2, 54 (V0)
   2C:  SUB.S     F4, F4, F0
   30:  SWC1      F2, 10 (SP)
   34:  LW        A2, 1C (V0)
   38:  LW        A3, 20 (V0)
   3C:  MFC1      A1, F4
   40:  JAL       ~Func:play_movement_dust_effects
   44:  LI        A0, 2
   48:  LW        RA, 18 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_802183E0_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_80218438_07 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LI        A0, 6
   68:  LA        A1, $Extra[80]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  COPY      A3, V0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       ~Func:playFX_46_whirlwind
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  LI        V0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28
}

#new:Function:Battle $Function_80218510_07 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 0 % *Array[0]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Green Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   18:  COPY      A0, V0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  COPY      V0, A0
        .o30
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 1 % *Array[1]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Yellow Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   38:  COPY      A0, V0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  COPY      V0, A0
        .o50
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 2 % *Array[2]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Black Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   58:  COPY      A0, V0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  COPY      V0, A0
        .o70
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 3 % *Array[3]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Red Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   78:  COPY      A0, V0
   7C:  BEQL      A0, R0, .o90
   80:  CLEAR     V0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  CLEAR     V0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18
}

#new:Function:Battle $Function_802185B0_07 {
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       ~Func:get_actor
   20:  LI        A0, 204
   24:  LW        S1, 94 (V0)
   28:  LI        V0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  LI        V0, 2
   3C:  BEQ       S1, V0, .o60
   40:  CLEAR     A0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  LI        V0, 4
   50:  BEQ       S1, V0, .o108
   54:  CLEAR     A0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80218510_07
   64:  LI        A0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  LI        A0, 6
   80:  JAL       $Function_80218510_07
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80218510_07
   A8:  LI        A0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  LI        A0, 5
   C4:  JAL       $Function_80218510_07
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  LI        A0, 6
   E4:  JAL       $Function_80218510_07
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80218510_07
  10C:  LI        A0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  LI        A0, 4
  128:  JAL       $Function_80218510_07
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  LI        A0, 5
  148:  JAL       $Function_80218510_07
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  LI        A0, 6
  168:  JAL       $Function_80218510_07
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  CLEAR     A0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  COPY      T1, V0
  198:  ADDIU     T0, SP, 20
  19C:  COPY      A3, T0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  COPY      A2, A0
  1AC:  COPY      A1, A3
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       ~Func:get_actor
  244:  NOP
  248:  LI        A0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  LI        V0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  LI        V0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  LI        V0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       ~Func:set_variable
  2B4:  COPY      A0, S2
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       ~Func:set_variable
  2D0:  COPY      A0, S2
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  COPY      A0, S2
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       ~Func:set_variable
  2F8:  COPY      A0, S2
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       ~Func:set_variable
  314:  COPY      A0, S2
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  COPY      A0, S2
        .o324
  324:  LI        V0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  LI        V0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       ~Func:set_variable
  370:  COPY      A0, S2
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       ~Func:set_variable
  38C:  COPY      A0, S2
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  COPY      A0, S2
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       ~Func:set_variable
  3B4:  COPY      A0, S2
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       ~Func:set_variable
  3D0:  COPY      A0, S2
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  COPY      A0, S2
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       ~Func:set_variable
  3F8:  COPY      A0, S2
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       ~Func:set_variable
  414:  COPY      A0, S2
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  COPY      A0, S2
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  LI        V0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  LI        V0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       ~Func:set_variable
  474:  COPY      A0, S2
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       ~Func:set_variable
  490:  COPY      A0, S2
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  COPY      A0, S2
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       ~Func:set_variable
  4B8:  COPY      A0, S2
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       ~Func:set_variable
  4D4:  COPY      A0, S2
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  COPY      A0, S2
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       ~Func:set_variable
  4FC:  COPY      A0, S2
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       ~Func:set_variable
  518:  COPY      A0, S2
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  COPY      A0, S2
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       ~Func:set_variable
  540:  COPY      A0, S2
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       ~Func:set_variable
  55C:  COPY      A0, S2
  560:  COPY      A0, S2
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       ~Func:set_variable
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  LI        V0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60
}

#new:Function:Battle $Function_80218B48_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  COPY      S0, V0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_80218BA0_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_80218BF8_07 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LI        A0, 6
   68:  LA        A1, $Extra[310]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  COPY      A3, V0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       ~Func:playFX_46_whirlwind
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  LI        V0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28
}

#new:Function:Battle $Function_80218CD0_07 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 0 % *Array[0]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Green Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   18:  COPY      A0, V0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  COPY      V0, A0
        .o30
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 1 % *Array[1]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Yellow Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   38:  COPY      A0, V0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  COPY      V0, A0
        .o50
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 2 % *Array[2]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Black Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   58:  COPY      A0, V0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  COPY      V0, A0
        .o70
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 3 % *Array[3]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Red Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   78:  COPY      A0, V0
   7C:  BEQL      A0, R0, .o90
   80:  CLEAR     V0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  CLEAR     V0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18
}

#new:Function:Battle $Function_80218D70_07 {
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       ~Func:get_actor
   20:  LI        A0, 204
   24:  LW        S1, 94 (V0)
   28:  LI        V0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  LI        V0, 2
   3C:  BEQ       S1, V0, .o60
   40:  CLEAR     A0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  LI        V0, 4
   50:  BEQ       S1, V0, .o108
   54:  CLEAR     A0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80218CD0_07
   64:  LI        A0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  LI        A0, 6
   80:  JAL       $Function_80218CD0_07
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80218CD0_07
   A8:  LI        A0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  LI        A0, 5
   C4:  JAL       $Function_80218CD0_07
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  LI        A0, 6
   E4:  JAL       $Function_80218CD0_07
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80218CD0_07
  10C:  LI        A0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  LI        A0, 4
  128:  JAL       $Function_80218CD0_07
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  LI        A0, 5
  148:  JAL       $Function_80218CD0_07
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  LI        A0, 6
  168:  JAL       $Function_80218CD0_07
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  CLEAR     A0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  COPY      T1, V0
  198:  ADDIU     T0, SP, 20
  19C:  COPY      A3, T0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  COPY      A2, A0
  1AC:  COPY      A1, A3
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       ~Func:get_actor
  244:  NOP
  248:  LI        A0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  LI        V0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  LI        V0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  LI        V0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       ~Func:set_variable
  2B4:  COPY      A0, S2
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       ~Func:set_variable
  2D0:  COPY      A0, S2
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  COPY      A0, S2
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       ~Func:set_variable
  2F8:  COPY      A0, S2
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       ~Func:set_variable
  314:  COPY      A0, S2
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  COPY      A0, S2
        .o324
  324:  LI        V0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  LI        V0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       ~Func:set_variable
  370:  COPY      A0, S2
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       ~Func:set_variable
  38C:  COPY      A0, S2
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  COPY      A0, S2
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       ~Func:set_variable
  3B4:  COPY      A0, S2
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       ~Func:set_variable
  3D0:  COPY      A0, S2
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  COPY      A0, S2
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       ~Func:set_variable
  3F8:  COPY      A0, S2
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       ~Func:set_variable
  414:  COPY      A0, S2
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  COPY      A0, S2
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  LI        V0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  LI        V0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       ~Func:set_variable
  474:  COPY      A0, S2
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       ~Func:set_variable
  490:  COPY      A0, S2
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  COPY      A0, S2
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       ~Func:set_variable
  4B8:  COPY      A0, S2
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       ~Func:set_variable
  4D4:  COPY      A0, S2
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  COPY      A0, S2
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       ~Func:set_variable
  4FC:  COPY      A0, S2
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       ~Func:set_variable
  518:  COPY      A0, S2
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  COPY      A0, S2
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       ~Func:set_variable
  540:  COPY      A0, S2
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       ~Func:set_variable
  55C:  COPY      A0, S2
  560:  COPY      A0, S2
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       ~Func:set_variable
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  LI        V0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60
}

#new:Function:Battle $Function_80219308_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  COPY      S0, V0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_80219360_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_802193B8_07 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LI        A0, 6
   68:  LA        A1, $Extra[5A0]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  COPY      A3, V0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       ~Func:playFX_46_whirlwind
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  LI        V0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28
}

#new:Function:Battle $Function_80219490_07 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 0 % *Array[0]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Green Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   18:  COPY      A0, V0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  COPY      V0, A0
        .o30
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 1 % *Array[1]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Yellow Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   38:  COPY      A0, V0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  COPY      V0, A0
        .o50
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 2 % *Array[2]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Black Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   58:  COPY      A0, V0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  COPY      V0, A0
        .o70
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 3 % *Array[3]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Red Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   78:  COPY      A0, V0
   7C:  BEQL      A0, R0, .o90
   80:  CLEAR     V0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  CLEAR     V0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18
}

#new:Function:Battle $Function_80219530_07 {
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       ~Func:get_actor
   20:  LI        A0, 204
   24:  LW        S1, 94 (V0)
   28:  LI        V0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  LI        V0, 2
   3C:  BEQ       S1, V0, .o60
   40:  CLEAR     A0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  LI        V0, 4
   50:  BEQ       S1, V0, .o108
   54:  CLEAR     A0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80219490_07
   64:  LI        A0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  LI        A0, 6
   80:  JAL       $Function_80219490_07
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80219490_07
   A8:  LI        A0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  LI        A0, 5
   C4:  JAL       $Function_80219490_07
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  LI        A0, 6
   E4:  JAL       $Function_80219490_07
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80219490_07
  10C:  LI        A0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  LI        A0, 4
  128:  JAL       $Function_80219490_07
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  LI        A0, 5
  148:  JAL       $Function_80219490_07
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  LI        A0, 6
  168:  JAL       $Function_80219490_07
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  CLEAR     A0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  COPY      T1, V0
  198:  ADDIU     T0, SP, 20
  19C:  COPY      A3, T0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  COPY      A2, A0
  1AC:  COPY      A1, A3
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       ~Func:get_actor
  244:  NOP
  248:  LI        A0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  LI        V0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  LI        V0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  LI        V0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       ~Func:set_variable
  2B4:  COPY      A0, S2
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       ~Func:set_variable
  2D0:  COPY      A0, S2
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  COPY      A0, S2
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       ~Func:set_variable
  2F8:  COPY      A0, S2
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       ~Func:set_variable
  314:  COPY      A0, S2
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  COPY      A0, S2
        .o324
  324:  LI        V0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  LI        V0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       ~Func:set_variable
  370:  COPY      A0, S2
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       ~Func:set_variable
  38C:  COPY      A0, S2
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  COPY      A0, S2
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       ~Func:set_variable
  3B4:  COPY      A0, S2
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       ~Func:set_variable
  3D0:  COPY      A0, S2
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  COPY      A0, S2
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       ~Func:set_variable
  3F8:  COPY      A0, S2
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       ~Func:set_variable
  414:  COPY      A0, S2
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  COPY      A0, S2
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  LI        V0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  LI        V0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       ~Func:set_variable
  474:  COPY      A0, S2
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       ~Func:set_variable
  490:  COPY      A0, S2
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  COPY      A0, S2
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       ~Func:set_variable
  4B8:  COPY      A0, S2
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       ~Func:set_variable
  4D4:  COPY      A0, S2
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  COPY      A0, S2
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       ~Func:set_variable
  4FC:  COPY      A0, S2
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       ~Func:set_variable
  518:  COPY      A0, S2
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  COPY      A0, S2
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       ~Func:set_variable
  540:  COPY      A0, S2
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       ~Func:set_variable
  55C:  COPY      A0, S2
  560:  COPY      A0, S2
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       ~Func:set_variable
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  LI        V0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60
}

#new:Function:Battle $Function_80219AC8_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  COPY      S0, V0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_80219B20_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function:Battle $Function_80219B78_07 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LI        A0, 6
   68:  LA        A1, $Extra[830]
   70:  MTC1      S3, F0
   74:  NOP
   78:  CVT.S.W   F0, F0
   7C:  SWC1      F0, 28 (A1)
   80:  MTC1      S2, F0
   84:  NOP
   88:  CVT.S.W   F0, F0
   8C:  COPY      A3, V0
   90:  LIF       F2, 10.0
   98:  LUI       A2, 3F80
   9C:  SUB.S     F0, F0, F2
   A0:  MTC1      S0, F2
   A4:  NOP
   A8:  CVT.S.W   F2, F2
   AC:  SWC1      F2, 30 (A1)
   B0:  JAL       ~Func:playFX_46_whirlwind
   B4:  SWC1      F0, 2C (A1)
   B8:  LW        RA, 20 (SP)
   BC:  LW        S3, 1C (SP)
   C0:  LW        S2, 18 (SP)
   C4:  LW        S1, 14 (SP)
   C8:  LW        S0, 10 (SP)
   CC:  LI        V0, 2
   D0:  JR        RA
   D4:  ADDIU     SP, SP, 28
}

#new:Function:Battle $Function_80219C50_07 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 0 % *Array[0]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Green Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   18:  COPY      A0, V0
   1C:  BEQ       A0, R0, .o30
   20:  NOP
   24:  LW        V0, 8C (A0)
   28:  BEQ       V0, S0, .o90
   2C:  COPY      V0, A0
        .o30
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 1 % *Array[1]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Yellow Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   38:  COPY      A0, V0
   3C:  BEQ       A0, R0, .o50
   40:  NOP
   44:  LW        V0, 8C (A0)
   48:  BEQ       V0, S0, .o90
   4C:  COPY      V0, A0
        .o50
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 2 % *Array[2]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Black Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   58:  COPY      A0, V0
   5C:  BEQ       A0, R0, .o70
   60:  NOP
   64:  LW        V0, 8C (A0)
   68:  BEQ       V0, S0, .o90
   6C:  COPY      V0, A0
        .o70
        LIO       A0, $ActorIDs_Ninja
        ORI       V0, R0, 3 % *Array[3]
        SLL       V0, V0, 2
        ADDU      A0, A0, V0
        LW        A0, 0 (A0) % load Red Koopa ActorID
        JAL       ~Func:get_actor
        NOP
   78:  COPY      A0, V0
   7C:  BEQL      A0, R0, .o90
   80:  CLEAR     V0
   84:  LW        V1, 8C (A0)
   88:  BNEL      V1, S0, .o90
   8C:  CLEAR     V0
        .o90
   90:  LW        RA, 14 (SP)
   94:  LW        S0, 10 (SP)
   98:  JR        RA
   9C:  ADDIU     SP, SP, 18
}

#new:Function:Battle $Function_80219CF0_07 {
    0:  ADDIU     SP, SP, FFA0
    4:  SW        S2, 58 (SP)
    8:  COPY      S2, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S1, 54 (SP)
   14:  SW        S0, 50 (SP)
   18:  LW        S0, C (S2)
   1C:  JAL       ~Func:get_actor
   20:  LI        A0, 204
   24:  LW        S1, 94 (V0)
   28:  LI        V0, 3
   2C:  BEQ       S1, V0, .oA4
   30:  SLTI      V0, S1, 4
   34:  BEQ       V0, R0, .o4C
   38:  LI        V0, 2
   3C:  BEQ       S1, V0, .o60
   40:  CLEAR     A0
   44:  BEQ       R0, R0, .o190
   48:  ADDIU     V0, S1, FFFF
        .o4C
   4C:  LI        V0, 4
   50:  BEQ       S1, V0, .o108
   54:  CLEAR     A0
   58:  BEQ       R0, R0, .o190
   5C:  ADDIU     V0, S1, FFFF
        .o60
   60:  JAL       $Function_80219C50_07
   64:  LI        A0, 3
   68:  LWC1      F0, 138 (V0)
   6C:  SWC1      F0, 20 (SP)
   70:  LWC1      F0, 13C (V0)
   74:  SWC1      F0, 24 (SP)
   78:  LWC1      F0, 140 (V0)
   7C:  LI        A0, 6
   80:  JAL       $Function_80219C50_07
   84:  SWC1      F0, 28 (SP)
   88:  LWC1      F0, 138 (V0)
   8C:  SWC1      F0, 2C (SP)
   90:  LWC1      F0, 13C (V0)
   94:  SWC1      F0, 30 (SP)
   98:  LWC1      F0, 140 (V0)
   9C:  BEQ       R0, R0, .o188
   A0:  SWC1      F0, 34 (SP)
        .oA4
   A4:  JAL       $Function_80219C50_07
   A8:  LI        A0, 3
   AC:  LWC1      F0, 138 (V0)
   B0:  SWC1      F0, 20 (SP)
   B4:  LWC1      F0, 13C (V0)
   B8:  SWC1      F0, 24 (SP)
   BC:  LWC1      F0, 140 (V0)
   C0:  LI        A0, 5
   C4:  JAL       $Function_80219C50_07
   C8:  SWC1      F0, 28 (SP)
   CC:  LWC1      F0, 138 (V0)
   D0:  SWC1      F0, 2C (SP)
   D4:  LWC1      F0, 13C (V0)
   D8:  SWC1      F0, 30 (SP)
   DC:  LWC1      F0, 140 (V0)
   E0:  LI        A0, 6
   E4:  JAL       $Function_80219C50_07
   E8:  SWC1      F0, 34 (SP)
   EC:  LWC1      F0, 138 (V0)
   F0:  SWC1      F0, 38 (SP)
   F4:  LWC1      F0, 13C (V0)
   F8:  SWC1      F0, 3C (SP)
   FC:  LWC1      F0, 140 (V0)
  100:  BEQ       R0, R0, .o188
  104:  SWC1      F0, 40 (SP)
        .o108
  108:  JAL       $Function_80219C50_07
  10C:  LI        A0, 3
  110:  LWC1      F0, 138 (V0)
  114:  SWC1      F0, 20 (SP)
  118:  LWC1      F0, 13C (V0)
  11C:  SWC1      F0, 24 (SP)
  120:  LWC1      F0, 140 (V0)
  124:  LI        A0, 4
  128:  JAL       $Function_80219C50_07
  12C:  SWC1      F0, 28 (SP)
  130:  LWC1      F0, 138 (V0)
  134:  SWC1      F0, 2C (SP)
  138:  LWC1      F0, 13C (V0)
  13C:  SWC1      F0, 30 (SP)
  140:  LWC1      F0, 140 (V0)
  144:  LI        A0, 5
  148:  JAL       $Function_80219C50_07
  14C:  SWC1      F0, 34 (SP)
  150:  LWC1      F0, 138 (V0)
  154:  SWC1      F0, 38 (SP)
  158:  LWC1      F0, 13C (V0)
  15C:  SWC1      F0, 3C (SP)
  160:  LWC1      F0, 140 (V0)
  164:  LI        A0, 6
  168:  JAL       $Function_80219C50_07
  16C:  SWC1      F0, 40 (SP)
  170:  LWC1      F0, 138 (V0)
  174:  SWC1      F0, 44 (SP)
  178:  LWC1      F0, 13C (V0)
  17C:  SWC1      F0, 48 (SP)
  180:  LWC1      F0, 140 (V0)
  184:  SWC1      F0, 4C (SP)
        .o188
  188:  CLEAR     A0
  18C:  ADDIU     V0, S1, FFFF
        .o190
  190:  BLEZ      V0, .o23C
  194:  COPY      T1, V0
  198:  ADDIU     T0, SP, 20
  19C:  COPY      A3, T0
        .o1A0
  1A0:  SLT       V0, A0, S1
  1A4:  BEQ       V0, R0, .o22C
  1A8:  COPY      A2, A0
  1AC:  COPY      A1, A3
  1B0:  SLL       V0, A0, 1
  1B4:  ADDU      V0, V0, A0
  1B8:  SLL       V0, V0, 2
  1BC:  ADDU      V1, V0, T0
        .o1C0
  1C0:  LWC1      F2, 0 (A1)
  1C4:  LWC1      F0, 0 (V1)
  1C8:  C.LT.S    F2, F0
  1CC:  NOP
  1D0:  BC1F      .o220
  1D4:  ADDIU     A2, A2, 1
  1D8:  LW        T2, 0 (A1)
  1DC:  LW        T3, 4 (A1)
  1E0:  LW        T4, 8 (A1)
  1E4:  SW        T2, 10 (SP)
  1E8:  SW        T3, 14 (SP)
  1EC:  SW        T4, 18 (SP)
  1F0:  LW        T2, 0 (V1)
  1F4:  LW        T3, 4 (V1)
  1F8:  LW        T4, 8 (V1)
  1FC:  SW        T2, 0 (A1)
  200:  SW        T3, 4 (A1)
  204:  SW        T4, 8 (A1)
  208:  LW        T2, 10 (SP)
  20C:  LW        T3, 14 (SP)
  210:  LW        T4, 18 (SP)
  214:  SW        T2, 0 (V1)
  218:  SW        T3, 4 (V1)
  21C:  SW        T4, 8 (V1)
        .o220
  220:  SLT       V0, A2, S1
  224:  BNE       V0, R0, .o1C0
  228:  ADDIU     V1, V1, C
        .o22C
  22C:  ADDIU     A0, A0, 1
  230:  SLT       V0, A0, T1
  234:  BNE       V0, R0, .o1A0
  238:  ADDIU     A3, A3, C
        .o23C
  23C:  LW        A0, 148 (S2)
  240:  JAL       ~Func:get_actor
  244:  NOP
  248:  LI        A0, 3
  24C:  LW        V1, 8C (V0)
  250:  BEQ       S1, A0, .o324
  254:  SLTI      V0, S1, 4
  258:  BEQ       V0, R0, .o270
  25C:  LI        V0, 2
  260:  BEQ       S1, V0, .o284
  264:  NOP
  268:  BEQ       R0, R0, .o57C
  26C:  NOP
        .o270
  270:  LI        V0, 4
  274:  BEQ       S1, V0, .o424
  278:  NOP
  27C:  BEQ       R0, R0, .o57C
  280:  NOP
        .o284
  284:  BEQ       V1, A0, .o29C
  288:  LI        V0, 6
  28C:  BEQ       V1, V0, .o2E0
  290:  NOP
  294:  BEQ       R0, R0, .o57C
  298:  NOP
        .o29C
  29C:  LW        A1, 0 (S0)
  2A0:  ADDIU     S0, S0, 4
  2A4:  LWC1      F0, 20 (SP)
  2A8:  TRUNC.W.S F4, F0
  2AC:  MFC1      A2, F4
  2B0:  JAL       ~Func:set_variable
  2B4:  COPY      A0, S2
  2B8:  LW        A1, 0 (S0)
  2BC:  ADDIU     S0, S0, 4
  2C0:  LWC1      F0, 24 (SP)
  2C4:  TRUNC.W.S F4, F0
  2C8:  MFC1      A2, F4
  2CC:  JAL       ~Func:set_variable
  2D0:  COPY      A0, S2
  2D4:  LWC1      F0, 28 (SP)
  2D8:  BEQ       R0, R0, .o568
  2DC:  COPY      A0, S2
        .o2E0
  2E0:  LW        A1, 0 (S0)
  2E4:  ADDIU     S0, S0, 4
  2E8:  LWC1      F0, 2C (SP)
  2EC:  TRUNC.W.S F4, F0
  2F0:  MFC1      A2, F4
  2F4:  JAL       ~Func:set_variable
  2F8:  COPY      A0, S2
  2FC:  LW        A1, 0 (S0)
  300:  ADDIU     S0, S0, 4
  304:  LWC1      F0, 30 (SP)
  308:  TRUNC.W.S F4, F0
  30C:  MFC1      A2, F4
  310:  JAL       ~Func:set_variable
  314:  COPY      A0, S2
  318:  LWC1      F0, 34 (SP)
  31C:  BEQ       R0, R0, .o568
  320:  COPY      A0, S2
        .o324
  324:  LI        V0, 5
  328:  BEQ       V1, V0, .o39C
  32C:  SLTI      V0, V1, 6
  330:  BEQ       V0, R0, .o348
  334:  LI        V0, 6
  338:  BEQ       V1, A0, .o358
  33C:  NOP
  340:  BEQ       R0, R0, .o57C
  344:  NOP
        .o348
  348:  BEQ       V1, V0, .o3E0
  34C:  NOP
  350:  BEQ       R0, R0, .o57C
  354:  NOP
        .o358
  358:  LW        A1, 0 (S0)
  35C:  ADDIU     S0, S0, 4
  360:  LWC1      F0, 20 (SP)
  364:  TRUNC.W.S F4, F0
  368:  MFC1      A2, F4
  36C:  JAL       ~Func:set_variable
  370:  COPY      A0, S2
  374:  LW        A1, 0 (S0)
  378:  ADDIU     S0, S0, 4
  37C:  LWC1      F0, 24 (SP)
  380:  TRUNC.W.S F4, F0
  384:  MFC1      A2, F4
  388:  JAL       ~Func:set_variable
  38C:  COPY      A0, S2
  390:  LWC1      F0, 28 (SP)
  394:  BEQ       R0, R0, .o568
  398:  COPY      A0, S2
        .o39C
  39C:  LW        A1, 0 (S0)
  3A0:  ADDIU     S0, S0, 4
  3A4:  LWC1      F0, 2C (SP)
  3A8:  TRUNC.W.S F4, F0
  3AC:  MFC1      A2, F4
  3B0:  JAL       ~Func:set_variable
  3B4:  COPY      A0, S2
  3B8:  LW        A1, 0 (S0)
  3BC:  ADDIU     S0, S0, 4
  3C0:  LWC1      F0, 30 (SP)
  3C4:  TRUNC.W.S F4, F0
  3C8:  MFC1      A2, F4
  3CC:  JAL       ~Func:set_variable
  3D0:  COPY      A0, S2
  3D4:  LWC1      F0, 34 (SP)
  3D8:  BEQ       R0, R0, .o568
  3DC:  COPY      A0, S2
        .o3E0
  3E0:  LW        A1, 0 (S0)
  3E4:  ADDIU     S0, S0, 4
  3E8:  LWC1      F0, 38 (SP)
  3EC:  TRUNC.W.S F4, F0
  3F0:  MFC1      A2, F4
  3F4:  JAL       ~Func:set_variable
  3F8:  COPY      A0, S2
  3FC:  LW        A1, 0 (S0)
  400:  ADDIU     S0, S0, 4
  404:  LWC1      F0, 3C (SP)
  408:  TRUNC.W.S F4, F0
  40C:  MFC1      A2, F4
  410:  JAL       ~Func:set_variable
  414:  COPY      A0, S2
  418:  LWC1      F0, 40 (SP)
  41C:  BEQ       R0, R0, .o568
  420:  COPY      A0, S2
        .o424
  424:  BEQ       V1, S1, .o4A0
  428:  SLTI      V0, V1, 5
  42C:  BEQ       V0, R0, .o444
  430:  LI        V0, 5
  434:  BEQ       V1, A0, .o45C
  438:  NOP
  43C:  BEQ       R0, R0, .o57C
  440:  NOP
        .o444
  444:  BEQ       V1, V0, .o4E4
  448:  LI        V0, 6
  44C:  BEQ       V1, V0, .o528
  450:  NOP
  454:  BEQ       R0, R0, .o57C
  458:  NOP
        .o45C
  45C:  LW        A1, 0 (S0)
  460:  ADDIU     S0, S0, 4
  464:  LWC1      F0, 20 (SP)
  468:  TRUNC.W.S F4, F0
  46C:  MFC1      A2, F4
  470:  JAL       ~Func:set_variable
  474:  COPY      A0, S2
  478:  LW        A1, 0 (S0)
  47C:  ADDIU     S0, S0, 4
  480:  LWC1      F0, 24 (SP)
  484:  TRUNC.W.S F4, F0
  488:  MFC1      A2, F4
  48C:  JAL       ~Func:set_variable
  490:  COPY      A0, S2
  494:  LWC1      F0, 28 (SP)
  498:  BEQ       R0, R0, .o568
  49C:  COPY      A0, S2
        .o4A0
  4A0:  LW        A1, 0 (S0)
  4A4:  ADDIU     S0, S0, 4
  4A8:  LWC1      F0, 2C (SP)
  4AC:  TRUNC.W.S F4, F0
  4B0:  MFC1      A2, F4
  4B4:  JAL       ~Func:set_variable
  4B8:  COPY      A0, S2
  4BC:  LW        A1, 0 (S0)
  4C0:  ADDIU     S0, S0, 4
  4C4:  LWC1      F0, 30 (SP)
  4C8:  TRUNC.W.S F4, F0
  4CC:  MFC1      A2, F4
  4D0:  JAL       ~Func:set_variable
  4D4:  COPY      A0, S2
  4D8:  LWC1      F0, 34 (SP)
  4DC:  BEQ       R0, R0, .o568
  4E0:  COPY      A0, S2
        .o4E4
  4E4:  LW        A1, 0 (S0)
  4E8:  ADDIU     S0, S0, 4
  4EC:  LWC1      F0, 38 (SP)
  4F0:  TRUNC.W.S F4, F0
  4F4:  MFC1      A2, F4
  4F8:  JAL       ~Func:set_variable
  4FC:  COPY      A0, S2
  500:  LW        A1, 0 (S0)
  504:  ADDIU     S0, S0, 4
  508:  LWC1      F0, 3C (SP)
  50C:  TRUNC.W.S F4, F0
  510:  MFC1      A2, F4
  514:  JAL       ~Func:set_variable
  518:  COPY      A0, S2
  51C:  LWC1      F0, 40 (SP)
  520:  BEQ       R0, R0, .o568
  524:  COPY      A0, S2
        .o528
  528:  LW        A1, 0 (S0)
  52C:  ADDIU     S0, S0, 4
  530:  LWC1      F0, 44 (SP)
  534:  TRUNC.W.S F4, F0
  538:  MFC1      A2, F4
  53C:  JAL       ~Func:set_variable
  540:  COPY      A0, S2
  544:  LW        A1, 0 (S0)
  548:  ADDIU     S0, S0, 4
  54C:  LWC1      F0, 48 (SP)
  550:  TRUNC.W.S F4, F0
  554:  MFC1      A2, F4
  558:  JAL       ~Func:set_variable
  55C:  COPY      A0, S2
  560:  COPY      A0, S2
  564:  LWC1      F0, 4C (SP)
        .o568
  568:  LW        A1, 0 (S0)
  56C:  TRUNC.W.S F4, F0
  570:  MFC1      A2, F4
  574:  JAL       ~Func:set_variable
  578:  NOP
        .o57C
  57C:  LW        RA, 5C (SP)
  580:  LW        S2, 58 (SP)
  584:  LW        S1, 54 (SP)
  588:  LW        S0, 50 (SP)
  58C:  LI        V0, 2
  590:  JR        RA
  594:  ADDIU     SP, SP, 60
}

#new:Function:Battle $Function_8021A288_07 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S1, 14 (SP)
   14:  LW        A0, 148 (S0)
   18:  JAL       ~Func:get_actor
   1C:  LW        S1, C (S0)
   20:  COPY      A0, S0
   24:  LW        A1, 0 (S1)
   28:  JAL       ~Func:get_variable
   2C:  COPY      S0, V0
   30:  SB        V0, 1F0 (S0)
   34:  LW        RA, 18 (SP)
   38:  LW        S1, 14 (SP)
   3C:  LW        S0, 10 (SP)
   40:  LI        V0, 2
   44:  JR        RA
   48:  ADDIU     SP, SP, 20
}

#new:DefenseTable $DefenseTable_8021A670_07 {
.Element:Normal 00000001
.Element:Blast  00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8021A684_07 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_8021A690_07 {
.Status:Normal      0`
.Status:Default    -1`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:IdleAnimations $IdleAnimations_8021A73C_07 {
.Status:Normal    00660004
.Status:End
}

#new:PartsTable $PartsTable_8021A748_07 {
00800001 0100000F D26E00FF $IdleAnimations_8021A73C_07 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 02000000 000000FF 00000000 $DefenseTable_8021A684_07 00000000 00000000 00000000 00000000 
00020000 05000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 03000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 04000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 06000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 07000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00120000 08000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00120000 09000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 0A000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
00020000 0B000000 000A00FF 00000000 $DefenseTable_8021A670_07 00000000 00000000 00000000 00000000 
}

#new:Script:Battle $Script_Init_8021A968_07 {
        %Call  SetEnemyHP        ( .Actor:Self .False )
        UseArray $ActorIDs_Ninja
        Call     $GetActorSelfID ( *Var0 )
        Set      .Actor:FakeBowser *Var0
        UseArray  $Extra[0] 
        Set   *Array[0] 8 % Spawn Koopa Bros.
        Call  BindTakeTurn  ( .Actor:Self $Script_null )
        Call  BindIdle      ( .Actor:Self $Script_Idle_8021D508_07 )
        Call  BindHandleEvent       ( .Actor:Self $Script_null )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8021F410_07 )
   %50:  UseArray  $Extra[0] 
   5C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   74:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   8C:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   A4:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   %BC:  Set   *Array[0]  00000000 
   CC:  Call  SetActorPos   ( .Actor:Self 00000060 00000000 00000000 )
   E8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  104:  Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  120:  Call  HPBarToHome   ( .Actor:Self )
  130:  Call  SetPartTargetFlagBits ( .Actor:Self 00000002 00000004 .True )
  14C:  Return
  154:  End
}

#new:Script $Script_null
{
    Return
    End
}

#new:Script:Battle $Script_Idle_8021D508_07 {
    0:  UseArray  $Extra[0] 
    C:  Set   *VarA  00000000 
   1C:  Label  0
   28:  Set   *Var0  *Array[0] 
   38:  Switch  *Var0 
   /%44:  	Case  ==  00000000 
   50:  		Set   *Array[0]  00000001 
   60:  		Exec  $Script_8021B6F0_07 
   6C:  		Exec  $Script_8021C1EC_07 
   78:  		Exec  $Script_8021ABE4_07 
   84:  	Case  ==  00000001 
   90:  	Case  ==  00000002 
   9C:  		Set   *Array[0]  00000003 
   AC:  		Exec  $Script_8021BC88_07 
   B8:  		Exec  $Script_8021AF70_07 
   C4:  	Case  ==  00000003 
   D0:  	Case  ==  00000004 
   DC:  		Set   *Array[0]  00000005 
   EC:  		Exec  $Script_8021B864_07 
   F8:  		Exec  $Script_8021C594_07 
  104:  		Exec  $Script_8021AD68_07 
  110:  		Exec  $Script_8021CF4C_07 
  11C:  	Case  ==  00000005 
  128:  	Case  ==  00000006 
  134:  		Set   *Array[0]  00000007 
  144:  		Exec  $Script_8021BA68_07 
  150:  		Exec  $Script_8021C3F4_07 
  15C:  		Exec  $Script_8021C9A4_07 
  168:  	Case  ==  00000007 %/
  174:  	Case  ==  00000008 % The Koopa Bros. appears
  180:  		Call  PlaySoundAtActor  ( .Actor:Self 000003B5 )
  194:  		Set   *Array[0]  00000009 
  /%1A4:  		Exec  $Script_8021B0E4_07 
  1B0:  		Exec  $Script_8021BD6C_07 
  1BC:  		Exec  $Script_8021BF14_07 
  1C8:  		Exec  $Script_8021CB98_07 
  1D4:  		Exec  $Script_8021CD50_07 
  1E0:  		Exec  $Script_8021D350_07 
  1EC:  		Exec  $Script_8021D054_07 
  1F8:  		Exec  $Script_8021D1CC_07 
  204:  		Exec  $Script_8021C67C_07 %/
  210:  		Exec  $Script_KoopaBrosAppears 
  21C:  	Case  ==  00000009 
  /%228:  	Case  ==  0000000A 
  234:  		Set   *Array[0]  0000000B 
  244:  		Exec  $Script_8021BA68_07 
  250:  		Exec  $Script_8021C3F4_07 
  25C:  		Exec  $Script_8021CAE4_07 
  268:  	Case  ==  0000000B %/
  274:  EndSwitch
  /%27C:  Call  GetPartPos    ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
  29C:  Call  TranslateGroup    ( 00000018 *Var0 *Var1 *Var2 )
  2B8:  Call  GetPartRotation   ( .Actor:Self 00000005 *Var0 *Var1 *Var2 )
  2D8:  Call  RotateGroup   ( 00000018 *Var0 00000001 00000000 00000000 )
  2F8:  Call  RotateGroup   ( 00000018 *Var1 00000000 00000001 00000000 )
  318:  Call  RotateGroup   ( 00000018 *Var2 00000000 00000000 00000001 )
  338:  Call  SetModelFlags ( 0000000F 00000040 .True )
  350:  Call  SetModelFlags ( 00000010 00000040 .True )
  368:  Call  SetModelFlags ( 00000011 00000040 .True )
  380:  Call  SetModelFlags ( 00000012 00000040 .True )
  398:  Call  SetModelFlags ( 00000013 00000040 .True )
  3B0:  Call  SetModelFlags ( 00000014 00000040 .True )
  3C8:  Call  SetModelFlags ( 00000015 00000040 .True )
  3E0:  Call  SetModelFlags ( 00000016 00000040 .True )
  3F8:  Call  SetModelFlags ( 00000017 00000040 .True )
  410:  Call  GetPartPos    ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  430:  Call  TranslateGroup    ( 00000022 *Var0 *Var1 *Var2 )
  44C:  Call  GetPartRotation   ( .Actor:Self 00000003 *Var0 *Var1 *Var2 )
  46C:  Call  RotateGroup   ( 00000022 *Var0 00000001 00000000 00000000 )
  48C:  Call  RotateGroup   ( 00000022 *Var1 00000000 00000001 00000000 )
  4AC:  Call  RotateGroup   ( 00000022 *Var2 00000000 00000000 00000001 )
  4CC:  Call  SetModelFlags ( 0000001F 00000040 .True )
  4E4:  Call  SetModelFlags ( 00000020 00000040 .True )
  4FC:  Call  SetModelFlags ( 00000021 00000040 .True )
  514:  Call  GetPartPos    ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  534:  Call  TranslateGroup    ( 0000001E *Var0 *Var1 *Var2 )
  550:  Call  GetPartRotation   ( .Actor:Self 00000004 *Var0 *Var1 *Var2 )
  570:  Call  RotateGroup   ( 0000001E *Var0 00000001 00000000 00000000 )
  590:  Call  RotateGroup   ( 0000001E *Var1 00000000 00000001 00000000 )
  5B0:  Call  RotateGroup   ( 0000001E *Var2 00000000 00000000 00000001 )
  5D0:  Call  SetModelFlags ( 00000019 00000040 .True )
  5E8:  Call  SetModelFlags ( 0000001A 00000040 .True )
  600:  Call  SetModelFlags ( 0000001B 00000040 .True )
  618:  Call  SetModelFlags ( 0000001C 00000040 .True )
  630:  Call  SetModelFlags ( 0000001D 00000040 .True )
  648:  Call  GetPartPos    ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  668:  Call  TranslateGroup    ( 0000000E *Var0 *Var1 *Var2 )
  684:  Call  GetPartRotation   ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
  6A4:  Call  RotateGroup   ( 0000000E *Var0 00000001 00000000 00000000 )
  6C4:  Call  RotateGroup   ( 0000000E *Var1 00000000 00000001 00000000 )
  6E4:  Call  RotateGroup   ( 0000000E *Var2 00000000 00000000 00000001 )
  704:  Call  SetModelFlags ( 0000000B 00000040 .True )
  71C:  Call  SetModelFlags ( 0000000C 00000040 .True )
  734:  Call  SetModelFlags ( 0000000D 00000040 .True )
  74C:  Call  GetPartPos    ( .Actor:Self 00000007 *Var0 *Var1 *Var2 )
  76C:  Call  TranslateGroup    ( 0000000A *Var0 *Var1 *Var2 )
  788:  Call  GetPartRotation   ( .Actor:Self 00000007 *Var0 *Var1 *Var2 )
  7A8:  Call  RotateGroup   ( 0000000A *Var0 00000001 00000000 00000000 )
  7C8:  Call  RotateGroup   ( 0000000A *Var1 00000000 00000001 00000000 )
  7E8:  Call  RotateGroup   ( 0000000A *Var2 00000000 00000000 00000001 )
  808:  Call  SetModelFlags ( 00000009 00000040 .True )
  820:  Set   *Var0  *Array[0] 
  830:  If  *Var0  ==  00000009 
  840:  	Call  GetPartPos    ( .Actor:Self 00000008 *Var0 *Var1 *Var2 )
  860:  Else
  868:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  884:  	Set   *Var1  00000000 
  894:  EndIf
  89C:  Call  SetPartPos    ( .Actor:Self 00000008 *Var0 *Var1 *Var2 )
  8BC:  Call  TranslateGroup    ( 0000002C *Var0 *Var1 *Var2 )
  8D8:  Call  GetPartRotation   ( .Actor:Self 00000008 *Var0 *Var1 *Var2 )
  8F8:  Call  RotateGroup   ( 0000002C *Var0 00000001 00000000 00000000 )
  918:  Call  RotateGroup   ( 0000002C *Var1 00000000 00000001 00000000 )
  938:  Call  RotateGroup   ( 0000002C *Var2 00000000 00000000 00000001 )
  958:  Call  SetModelFlags ( 0000002B 00000040 .True )
  970:  Set   *Var0  *Array[0] 
  980:  If  *Var0  ==  00000009 
  990:  	Call  GetPartPos    ( .Actor:Self 00000009 *Var0 *Var1 *Var2 )
  9B0:  Else
  9B8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9D4:  	Set   *Var1  00000000 
  9E4:  EndIf
  9EC:  Call  SetPartPos    ( .Actor:Self 00000009 *Var0 *Var1 *Var2 )
  A0C:  Call  TranslateGroup    ( 0000002E *Var0 *Var1 *Var2 )
  A28:  Call  GetPartRotation   ( .Actor:Self 00000009 *Var0 *Var1 *Var2 )
  A48:  Call  RotateGroup   ( 0000002E *Var0 00000001 00000000 00000000 )
  A68:  Call  RotateGroup   ( 0000002E *Var1 00000000 00000001 00000000 )
  A88:  Call  RotateGroup   ( 0000002E *Var2 00000000 00000000 00000001 )
  AA8:  Call  SetModelFlags ( 0000002D 00000040 .True )
  AC0:  Call  GetPartPos    ( .Actor:Self 0000000B *Var0 *Var1 *Var2 )
  AE0:  Call  TranslateGroup    ( 00000026 *Var0 *Var1 *Var2 )
  AFC:  Call  GetPartRotation   ( .Actor:Self 0000000B *Var0 *Var1 *Var2 )
  B1C:  Call  RotateGroup   ( 00000026 *Var0 00000001 00000000 00000000 )
  B3C:  Call  RotateGroup   ( 00000026 *Var1 00000000 00000001 00000000 )
  B5C:  Call  RotateGroup   ( 00000026 *Var2 00000000 00000000 00000001 )
  B7C:  Call  SetModelFlags ( 00000023 00000040 .True )
  B94:  Call  SetModelFlags ( 00000024 00000040 .True )
  BAC:  Call  SetModelFlags ( 00000025 00000040 .True )
  BC4:  Call  GetPartPos    ( .Actor:Self 0000000A *Var0 *Var1 *Var2 )
  BE4:  Call  TranslateGroup    ( 0000002A *Var0 *Var1 *Var2 )
  C00:  Call  GetPartRotation   ( .Actor:Self 0000000A *Var0 *Var1 *Var2 )
  C20:  Call  RotateGroup   ( 0000002A *Var0 00000001 00000000 00000000 )
  C40:  Call  RotateGroup   ( 0000002A *Var1 00000000 00000001 00000000 )
  C60:  Call  RotateGroup   ( 0000002A *Var2 00000000 00000000 00000001 )
  C80:  Call  SetModelFlags ( 00000027 00000040 .True )
  C98:  Call  SetModelFlags ( 00000028 00000040 .True )
  CB0:  Call  SetModelFlags ( 00000029 00000040 .True )%/
  CC8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  CE0:  If  *Var0  !&  00000002 
  CF0:  	Call  GetActorHP    ( .Actor:Self *Var0 )
  D04:  	Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  D18:  	Mul   *Var0  00000064 
  D28:  	Div   *Var0  *Var1 
  D38:  	Switch  *Var0 
  D44:  		Case  ==  00000000 
  D50:  		Case  <  00000014 
  D5C:  			If  *VarA  >  00000014 
  D6C:  				Exec  $Script_8021E3A0_07 
  D78:  				Set   *VarA  00000000 
  D88:  			EndIf
  D90:  		Case  <  00000028 
  D9C:  			If  *VarA  >  00000028 
  DAC:  				Exec  $Script_8021E3A0_07 
  DB8:  				Set   *VarA  00000000 
  DC8:  			EndIf
  DD0:  		Case  <  0000003C 
  DDC:  			If  *VarA  >  0000003C 
  DEC:  				Exec  $Script_8021E3A0_07 
  DF8:  				Set   *VarA  00000000 
  E08:  			EndIf
  E10:  		Case  <  00000050 
  E1C:  			If  *VarA  >  00000050 
  E2C:  				Exec  $Script_8021E3A0_07 
  E38:  				Set   *VarA  00000000 
  E48:  			EndIf
  E50:  	EndSwitch
  E58:  	Add   *VarA  00000001 
  E68:  EndIf
  E70:  Wait  1`
  E7C:  Goto  0
  E88:  Return
  E90:  End
}

#new:Script:Battle $Script_8021E3A0_07 {
    0:  Div   *VarA  00000004 
   10:  Add   *VarA  00000001 
   20:  Call  RandInt       ( *VarA *Var3 )
   34:  Add   *Var3  00000001 
   44:  Wait  *Var3 
   50:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   6C:  Add   *Var0  FFFFFFF8 
   7C:  Call  PlayEffect    ( ~FX:Steam:Ring *Var0 00000062 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C0:  Call  RandInt       ( *VarA *Var3 )
   D4:  Add   *Var3  00000001 
   E4:  Wait  *Var3 
   F0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  10C:  Add   *Var0  FFFFFFF4 
  11C:  Call  PlayEffect    ( ~FX:Steam:Ring *Var0 00000017 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  160:  Call  RandInt       ( *VarA *Var3 )
  174:  Add   *Var3  00000001 
  184:  Wait  *Var3 
  190:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  Add   *Var0  FFFFFFD1 
  1BC:  Call  PlayEffect    ( ~FX:Steam:Ring *Var0 00000046 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  200:  Call  RandInt       ( *VarA *Var3 )
  214:  Add   *Var3  00000001 
  224:  Wait  *Var3 
  230:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  Add   *Var0  00000028 
  25C:  Call  PlayEffect    ( ~FX:Steam:Ring *Var0 00000016 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2A0:  Call  RandInt       ( *VarA *Var3 )
  2B4:  Add   *Var3  00000001 
  2C4:  Wait  *Var3 
  2D0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2EC:  Add   *Var0  FFFFFFED 
  2FC:  Call  PlayEffect    ( ~FX:Steam:Ring *Var0 0000003B 00000021 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  340:  Return
  348:  End
}

#new:Script:Battle $Script_NextTurn_8021F410_07 {
    0:  UseArray  $Extra[0] 
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  GetBattlePhase    ( *Var0 )
   30:  Switch  *Var0 
   3C:  	Case  ==  .Phase:PlayerBegin 
   48:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   60:  		If  *Var0  !&  00000008 
              		Label  WaitKoopas
              		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
              		Wait  1`
              		If  *Var0  !&  00000001 
              			Goto  WaitKoopas
              		EndIf
              		Wait  20`
              		ExecWait  $Script_80222C44_07
                    Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
                    Call  SetEnemyHP    ( .Actor:Self *Var0 )
  1EC:  		EndIf
  1F4:  EndSwitch
  1FC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  210:  Return
  218:  End
}

#new:Script:Battle $Script_KoopaBrosAppears { % Script_8021F630_07
        UseArray  $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:KoopaG .False )
   14:  Call  EnableIdleScript  ( .Actor:KoopaG 00000000 )
        % Green Koopa
  4F8:  Call  SetActorPos    ( .Actor:KoopaG 51` 0 49` ) % HomePos_Ninja1
  514:  Call  SetActorJumpGravity   ( .Actor:KoopaG *Fixed[1.5] )
        Call  GetActorPos ( .Actor:KoopaG *Var0 *Var1 *Var2 )
  580:  Call  ForceHomePos  ( .Actor:KoopaG *Var0 *Var1 *Var2 )
  59C:  Call  SetAnimation  ( .Actor:KoopaG 00000001 00660305 )
        % Yellow Koopa
  604:  Call  SetActorPos    ( .Actor:KoopaY 77` 0 55` ) % HomePos_Ninja2
  620:  Call  SetActorJumpGravity   ( .Actor:KoopaY *Fixed[1.5] )
        Call  GetActorPos ( .Actor:KoopaY *Var0 *Var1 *Var2 )
  68C:  Call  ForceHomePos  ( .Actor:KoopaY *Var0 *Var1 *Var2 )
  6A8:  Call  SetAnimation  ( .Actor:KoopaY 00000001 00660205 )
        % Black Koopa
  710:  Call  SetActorPos    ( .Actor:KoopaB 105` 0 62` ) % HomePos_Ninja3
  72C:  Call  SetActorJumpGravity   ( .Actor:KoopaB *Fixed[1.5] )
        Call  GetActorPos ( .Actor:KoopaB *Var0 *Var1 *Var2 )
  798:  Call  ForceHomePos  ( .Actor:KoopaB *Var0 *Var1 *Var2 )
  7B4:  Call  SetAnimation  ( .Actor:KoopaB 00000001 00660005 )
        % Red Koopa
  81C:  Call  SetActorPos    ( .Actor:KoopaR 134` 0 68` ) % HomePos_Ninja4
  838:  Call  SetActorJumpGravity   ( .Actor:KoopaR *Fixed[1.5] )
        Call  GetActorPos ( .Actor:KoopaR *Var0 *Var1 *Var2 )
  8A4:  Call  ForceHomePos  ( .Actor:KoopaR *Var0 *Var1 *Var2 )
  8C0:  Call  SetAnimation  ( .Actor:KoopaR 00000001 00660105 )
        %
  CA8:  Call  SetActorFlagBits  ( .Actor:Self 00440000 .True )
  CC0:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
  CDC:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
  CF8:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00800000 .False )
  D14:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00800000 .True )
  D30:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_KoopaBros )
  D44:  Call  BindIdle      ( .Actor:Self $Script_Idle_802239BC_07 )
  D58:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802242FC_07 )
  D6C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80225438_07 )
  D80:  Call  SetActorFlagBits  ( .Actor:KoopaG 00040000 .False )
  D98:  Call  SetPartFlagBits   ( .Actor:KoopaG 00000001 00020000 .False )
  DB4:  Call  HPBarToHome   ( .Actor:KoopaG )
  DC4:  Call  SetAnimation  ( .Actor:KoopaG 00000001 00660304 )
  DDC:  Call  SetActorFlagBits  ( .Actor:KoopaY 00040000 .False )
  DF4:  Call  SetPartFlagBits   ( .Actor:KoopaY 00000001 00020000 .False )
  E10:  Call  HPBarToHome   ( .Actor:KoopaY )
  E20:  Call  SetAnimation  ( .Actor:KoopaY 00000001 00660204 )
  E38:  Call  SetActorFlagBits  ( .Actor:KoopaB 00040000 .False )
  E50:  Call  SetPartFlagBits   ( .Actor:KoopaB 00000001 00020000 .False )
  E6C:  Call  HPBarToHome   ( .Actor:KoopaB )
  E7C:  Call  SetAnimation  ( .Actor:KoopaB 00000001 00660004 )
  E94:  Call  SetActorFlagBits  ( .Actor:KoopaR 00040000 .False )
  EAC:  Call  SetPartFlagBits   ( .Actor:KoopaR 00000001 00020000 .False )
  EC8:  Call  HPBarToHome   ( .Actor:KoopaR )
  ED8:  Call  SetAnimation  ( .Actor:KoopaR 00000001 00660104 )
  EF0:  Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
  F08:  Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  F20:  ConstOR  *Var0 00000001 
  F30:  Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  F48:  Return
  F50:  End
}

#new:Script:Battle $Script_80220588_07 {
        UseArray  $ActorIDs_Ninja
    0:  If  *Var2  ==  00000000 
   10:  	Call  SetActorVar   ( .Actor:Self 00000005 *Var0 )
   28:  EndIf
   30:  Set   *VarA  *Var0 
   40:  Set   *VarB  *Var1 
   50:  Set   *VarC  *Var2 
   60:  Call  UseIdleAnimation  ( *VarA .False )
   74:  Switch  *Var2 
   80:  	Case  ==  00000000 
   8C:  		Switch  *VarA 
   98:  			Case  ==  .Actor:KoopaG 
   A4:  				Call  SetAnimation  ( *VarA 00000001 0066031B )
   BC:  			Case  ==  .Actor:KoopaY 
   C8:  				Call  SetAnimation  ( *VarA 00000001 0066021B )
   E0:  			Case  ==  .Actor:KoopaB 
   EC:  				Call  SetAnimation  ( *VarA 00000001 0066001B )
  104:  			Case  ==  .Actor:KoopaR 
  110:  				Call  SetAnimation  ( *VarA 00000001 0066011B )
  128:  		EndSwitch
  130:  		Call  SetActorYaw   ( *VarA 00000000 )
  144:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  160:  		Sub   *Var0  00000016 
  170:  		Add   *Var1  00000013 
  180:  		Wait  10`
  18C:  		Wait  30`
  198:  		Set   *Var0  *VarB 
  1A8:  		Sub   *Var0  00000001 
  1B8:  		Mul   *Var0  00000010 
  1C8:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  1E0:  		Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
  1FC:  		Call  SetBattleCamTarget    ( *Var2 *Var3 *Var4 )
  214:  		Call  UseBattleCamPreset    ( 00000013 )
  224:  		Call  SetBattleCamOffsetZ   ( 00000032 )
  234:  		Call  SetBattleCamZoom      ( 00000190 )
  244:  		Call  MoveBattleCamOver     ( *Var0 )
  254:  		Wait  *Var0 
  260:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  278:  		Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
  294:  		Set   *Var4  0000000F 
  2A4:  		Call  SetGoalPos    ( *VarA *Var2 *Var3 *Var4 )
  2C0:  		Call  AddGoalPos    ( *VarA 00000000 00000000 00000000 )
  2DC:  		Switch  *VarA 
  2E8:  			Case  ==  .Actor:KoopaG 
  2F4:  				Call  SetAnimation  ( *VarA 00000001 00660303 )
  30C:  			Case  ==  .Actor:KoopaY 
  318:  				Call  SetAnimation  ( *VarA 00000001 00660203 )
  330:  			Case  ==  .Actor:KoopaB 
  33C:  				Call  SetAnimation  ( *VarA 00000001 00660003 )
  354:  			Case  ==  .Actor:KoopaR 
  360:  				Call  SetAnimation  ( *VarA 00000001 00660103 )
  378:  		EndSwitch
  380:  		Call  GetGoalPos    ( *VarA *Var0 *Var1 *Var2 )
  39C:  		Call  GetActorPos   ( *VarA *Var3 *Var4 *Var5 )
  3B8:  		If  *Var0  <  *Var3 
  3C8:  			Call  SetActorYaw   ( *VarA 00000000 )
  3DC:  		Else
  3E4:  			Call  SetActorYaw   ( *VarA 000000B4 )
  3F8:  		EndIf
  400:  		Switch  *VarA 
  40C:  			Case  ==  .Actor:KoopaG 
  418:  				Call  SetAnimation  ( *VarA 00000001 00660310 )
  430:  			Case  ==  .Actor:KoopaY 
  43C:  				Call  SetAnimation  ( *VarA 00000001 00660210 )
  454:  			Case  ==  .Actor:KoopaB 
  460:  				Call  SetAnimation  ( *VarA 00000001 00660010 )
  478:  			Case  ==  .Actor:KoopaR 
  484:  				Call  SetAnimation  ( *VarA 00000001 00660110 )
  49C:  		EndSwitch
  4A4:  		Wait  5`
  4B0:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  4C8:  		Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
  4E4:  		Set   *Var4  0000000F 
  4F4:  		Call  SetGoalPos    ( *VarA *Var2 *Var3 *Var4 )
  510:  		Set   *Var0  *VarB 
  520:  		Sub   *Var0  00000001 
  530:  		Mul   *Var0  00000012 
  540:  		Switch  *VarB 
  54C:  			Case  ==  00000004 
  558:  				Call  AddGoalPos    ( *VarA 00000000 *Var0 FFFFFFF6 )
  574:  			Case  ==  00000003 
  580:  				Call  AddGoalPos    ( *VarA 00000000 *Var0 FFFFFFF9 )
  59C:  			Case  ==  00000002 
  5A8:  				Call  AddGoalPos    ( *VarA 00000000 *Var0 FFFFFFFC )
  5C4:  		EndSwitch
  5CC:  		Call  AddGoalPos    ( *VarA 0000000F 00000000 00000000 )
  5E8:  		Thread
  5F0:  			Wait  10`
  5FC:  			Switch  *VarA 
  608:  				Case  ==  .Actor:KoopaG 
  614:  					Call  SetAnimation  ( *VarA 00000001 00660312 )
  62C:  				Case  ==  .Actor:KoopaY 
  638:  					Call  SetAnimation  ( *VarA 00000001 00660212 )
  650:  				Case  ==  .Actor:KoopaB 
  65C:  					Call  SetAnimation  ( *VarA 00000001 00660012 )
  674:  				Case  ==  .Actor:KoopaR 
  680:  					Call  SetAnimation  ( *VarA 00000001 00660112 )
  698:  			EndSwitch
  6A0:  		EndThread
  6A8:  		Switch  *VarA 
  6B4:  			Case  ==  .Actor:KoopaG 
  6C0:  				Call  SetAnimation  ( *VarA 00000001 00660311 )
  6D8:  			Case  ==  .Actor:KoopaY 
  6E4:  				Call  SetAnimation  ( *VarA 00000001 00660211 )
  6FC:  			Case  ==  .Actor:KoopaB 
  708:  				Call  SetAnimation  ( *VarA 00000001 00660011 )
  720:  			Case  ==  .Actor:KoopaR 
  72C:  				Call  SetAnimation  ( *VarA 00000001 00660111 )
  744:  		EndSwitch
  74C:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.6] )
  760:  		Call  JumpToGoal        ( *VarA 00000014 .False .False .False )
  780:  		Call  $Function_8021837C_07 ( *VarA )
  790:  		Call  PlaySoundAtActor  ( *VarA 000003E9 )
  7A4:  		Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
  7C0:  		Sub   *Var3  0000000F 
  7D0:  		Call  SetActorPos       ( *VarA *Var3 *Var4 *Var5 )
  7EC:  		Switch  *VarA 
  7F8:  			Case  ==  .Actor:KoopaG 
  804:  				Call  SetAnimation  ( *VarA 00000001 00660304 )
  81C:  			Case  ==  .Actor:KoopaY 
  828:  				Call  SetAnimation  ( *VarA 00000001 00660204 )
  840:  			Case  ==  .Actor:KoopaB 
  84C:  				Call  SetAnimation  ( *VarA 00000001 00660004 )
  864:  			Case  ==  .Actor:KoopaR 
  870:  				Call  SetAnimation  ( *VarA 00000001 00660104 )
  888:  		EndSwitch
  890:  		Wait  5`
  89C:  		Call  SetActorYaw   ( *VarA 00000000 )
  8B0:  		Switch  *VarA 
  8BC:  			Case  ==  .Actor:KoopaG 
  8C8:  				Call  SetAnimation  ( *VarA 00000001 0066031B )
  8E0:  			Case  ==  .Actor:KoopaY 
  8EC:  				Call  SetAnimation  ( *VarA 00000001 0066021B )
  904:  			Case  ==  .Actor:KoopaB 
  910:  				Call  SetAnimation  ( *VarA 00000001 0066001B )
  928:  			Case  ==  .Actor:KoopaR 
  934:  				Call  SetAnimation  ( *VarA 00000001 0066011B )
  94C:  		EndSwitch
  954:  		Call  PlaySoundAtActor  ( *VarA 000020F3 )
  968:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  984:  		Sub   *Var0  00000016 
  994:  		Add   *Var1  00000013 
  9A4:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  9E8:  		Wait  20`
  9F4:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  A0C:  		If  *Var0  !&  00000002 
  %A1C:  			Call  ActorSpeak    ( 000C010A *VarA 00000001 FFFFFFFF FFFFFFFF ) % OK, Mario! Have a taste of this!
  A3C:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  A54:  			ConstOR  *Var0 00000002 
  A64:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  A7C:  		EndIf
  A84:  		Wait  10`
  A90:  		Switch  *VarA 
  A9C:  			Case  ==  .Actor:KoopaG 
  AA8:  				Call  SetAnimation  ( *VarA 00000001 00660304 )
  AC0:  			Case  ==  .Actor:KoopaY 
  ACC:  				Call  SetAnimation  ( *VarA 00000001 00660204 )
  AE4:  			Case  ==  .Actor:KoopaB 
  AF0:  				Call  SetAnimation  ( *VarA 00000001 00660004 )
  B08:  			Case  ==  .Actor:KoopaR 
  B14:  				Call  SetAnimation  ( *VarA 00000001 00660104 )
  B2C:  		EndSwitch
  B34:  		Call  SetActorFlagBits  ( *VarA 00040000 .True )
  B4C:  		Call  SetPartFlagBits   ( *VarA 00000001 00020000 .True )
  B68:  		Call  HPBarToHome       ( *VarA )
  B78:  		Call  SetActorVar       ( *VarA 00000001 00000003 )
  B90:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  BA8:  	CaseOR  ==  00000001 
  BB4:  	CaseOR  ==  00000002 
  BC0:  	CaseOR  ==  00000003 
  BCC:  		Switch  *VarA 
  BD8:  			Case  ==  .Actor:KoopaG 
  BE4:  				Call  SetAnimation  ( *VarA 00000001 00660305 )
  BFC:  			Case  ==  .Actor:KoopaY 
  C08:  				Call  SetAnimation  ( *VarA 00000001 00660205 )
  C20:  			Case  ==  .Actor:KoopaB 
  C2C:  				Call  SetAnimation  ( *VarA 00000001 00660005 )
  C44:  			Case  ==  .Actor:KoopaR 
  C50:  				Call  SetAnimation  ( *VarA 00000001 00660105 )
  C68:  		EndSwitch
  C70:  		Wait  50`
  C7C:  		Set   *Var0  *VarB 
  C8C:  		Sub   *Var0  00000001 
  C9C:  		If  *VarC  ==  *Var0 
  CAC:  			Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  CC4:  			Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
  CE0:  			Set   *Var4  0000000F 
  CF0:  			Call  SetGoalPos    ( *VarA *Var2 *Var3 *Var4 )
  D0C:  			Call  AddGoalPos    ( *VarA 00000000 00000000 00000000 )
  D28:  			Switch  *VarA 
  D34:  				Case  ==  .Actor:KoopaG 
  D40:  					Call  SetAnimation  ( *VarA 00000001 00660303 )
  D58:  				Case  ==  .Actor:KoopaY 
  D64:  					Call  SetAnimation  ( *VarA 00000001 00660203 )
  D7C:  				Case  ==  .Actor:KoopaB 
  D88:  					Call  SetAnimation  ( *VarA 00000001 00660003 )
  DA0:  				Case  ==  .Actor:KoopaR 
  DAC:  					Call  SetAnimation  ( *VarA 00000001 00660103 )
  DC4:  			EndSwitch
  DCC:  			Call  RunToGoal ( *VarA 0000000A .False )
  DE4:  			Switch  *VarA 
  DF0:  				Case  ==  .Actor:KoopaG 
  DFC:  					Call  SetAnimation  ( *VarA 00000001 00660305 )
  E14:  				Case  ==  .Actor:KoopaY 
  E20:  					Call  SetAnimation  ( *VarA 00000001 00660205 )
  E38:  				Case  ==  .Actor:KoopaB 
  E44:  					Call  SetAnimation  ( *VarA 00000001 00660005 )
  E5C:  				Case  ==  .Actor:KoopaR 
  E68:  					Call  SetAnimation  ( *VarA 00000001 00660105 )
  E80:  			EndSwitch
  E88:  			Call  SetActorFlagBits  ( *VarA 00040000 .True )
  EA0:  			Call  SetPartFlagBits   ( *VarA 00000001 00020000 .True )
  EBC:  			Call  HPBarToHome       ( *VarA )
  ECC:  			Call  SetActorVar       ( *VarA 00000001 00000006 )
  EE4:  		EndIf
  EEC:  		Set   *Var0  *VarB 
  EFC:  		Sub   *Var0  00000002 
  F0C:  		If  *VarC  ==  *Var0 
  F1C:  			Wait  10`
  F28:  			Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  F40:  			Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
  F5C:  			Set   *Var4  0000000F 
  F6C:  			Call  SetGoalPos    ( *VarA *Var2 *Var3 *Var4 )
  F88:  			Call  AddGoalPos    ( *VarA 00000000 00000012 FFFFFFFC )
  FA4:  			Switch  *VarA 
  FB0:  				Case  ==  .Actor:KoopaG 
  FBC:  					Call  SetAnimation  ( *VarA 00000001 00660310 )
  FD4:  				Case  ==  .Actor:KoopaY 
  FE0:  					Call  SetAnimation  ( *VarA 00000001 00660210 )
  FF8:  				Case  ==  .Actor:KoopaB 
 1004:  					Call  SetAnimation  ( *VarA 00000001 00660010 )
 101C:  				Case  ==  .Actor:KoopaR 
 1028:  					Call  SetAnimation  ( *VarA 00000001 00660110 )
 1040:  			EndSwitch
 1048:  			Wait  5`
 1054:  			Call  AddGoalPos    ( *VarA 0000000F 00000000 00000000 )
 1070:  			Thread
 1078:  				Wait  10`
 1084:  				Switch  *VarA 
 1090:  					Case  ==  .Actor:KoopaG 
 109C:  						Call  SetAnimation  ( *VarA 00000001 00660312 )
 10B4:  					Case  ==  .Actor:KoopaY 
 10C0:  						Call  SetAnimation  ( *VarA 00000001 00660212 )
 10D8:  					Case  ==  .Actor:KoopaB 
 10E4:  						Call  SetAnimation  ( *VarA 00000001 00660012 )
 10FC:  					Case  ==  .Actor:KoopaR 
 1108:  						Call  SetAnimation  ( *VarA 00000001 00660112 )
 1120:  				EndSwitch
 1128:  			EndThread
 1130:  			Switch  *VarA 
 113C:  				Case  ==  .Actor:KoopaG 
 1148:  					Call  SetAnimation  ( *VarA 00000001 00660311 )
 1160:  				Case  ==  .Actor:KoopaY 
 116C:  					Call  SetAnimation  ( *VarA 00000001 00660211 )
 1184:  				Case  ==  .Actor:KoopaB 
 1190:  					Call  SetAnimation  ( *VarA 00000001 00660011 )
 11A8:  				Case  ==  .Actor:KoopaR 
 11B4:  					Call  SetAnimation  ( *VarA 00000001 00660111 )
 11CC:  			EndSwitch
 11D4:  			Call  SetActorJumpGravity   ( *VarA *Fixed[1.6] )
 11E8:  			Call  JumpToGoal        ( *VarA 00000014 .False .False .False )
 1208:  			Call  $Function_8021837C_07 ( *VarA )
 1218:  			Call  PlaySoundAtActor  ( *VarA 000003E9 )
 122C:  			Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
 1248:  			Sub   *Var3  0000000F 
 1258:  			Call  SetActorPos       ( *VarA *Var3 *Var4 *Var5 )
 1274:  			Switch  *VarA 
 1280:  				Case  ==  .Actor:KoopaG 
 128C:  					Call  SetAnimation  ( *VarA 00000001 00660305 )
 12A4:  				Case  ==  .Actor:KoopaY 
 12B0:  					Call  SetAnimation  ( *VarA 00000001 00660205 )
 12C8:  				Case  ==  .Actor:KoopaB 
 12D4:  					Call  SetAnimation  ( *VarA 00000001 00660005 )
 12EC:  				Case  ==  .Actor:KoopaR 
 12F8:  					Call  SetAnimation  ( *VarA 00000001 00660105 )
 1310:  			EndSwitch
 1318:  			Call  SetActorFlagBits  ( *VarA 00040000 .True )
 1330:  			Call  SetPartFlagBits   ( *VarA 00000001 00020000 .True )
 134C:  			Call  HPBarToHome       ( *VarA )
 135C:  			Call  SetActorVar       ( *VarA 00000001 00000005 )
 1374:  		EndIf
 137C:  		Set   *Var0  *VarB 
 138C:  		Sub   *Var0  00000003 
 139C:  		If  *VarC  ==  *Var0 
 13AC:  			Wait  30`
 13B8:  			Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
 13D0:  			Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 13EC:  			Set   *Var4  0000000F 
 13FC:  			Call  SetGoalPos    ( *VarA *Var2 *Var3 *Var4 )
 1418:  			Call  AddGoalPos    ( *VarA 00000000 00000024 FFFFFFF9 )
 1434:  			Switch  *VarA 
 1440:  				Case  ==  .Actor:KoopaG 
 144C:  					Call  SetAnimation  ( *VarA 00000001 00660310 )
 1464:  				Case  ==  .Actor:KoopaY 
 1470:  					Call  SetAnimation  ( *VarA 00000001 00660210 )
 1488:  				Case  ==  .Actor:KoopaB 
 1494:  					Call  SetAnimation  ( *VarA 00000001 00660010 )
 14AC:  				Case  ==  .Actor:KoopaR 
 14B8:  					Call  SetAnimation  ( *VarA 00000001 00660110 )
 14D0:  			EndSwitch
 14D8:  			Wait  5`
 14E4:  			Call  AddGoalPos    ( *VarA 0000000F 00000000 00000000 )
 1500:  			Thread
 1508:  				Wait  10`
 1514:  				Switch  *VarA 
 1520:  					Case  ==  .Actor:KoopaG 
 152C:  						Call  SetAnimation  ( *VarA 00000001 00660312 )
 1544:  					Case  ==  .Actor:KoopaY 
 1550:  						Call  SetAnimation  ( *VarA 00000001 00660212 )
 1568:  					Case  ==  .Actor:KoopaB 
 1574:  						Call  SetAnimation  ( *VarA 00000001 00660012 )
 158C:  					Case  ==  .Actor:KoopaR 
 1598:  						Call  SetAnimation  ( *VarA 00000001 00660112 )
 15B0:  				EndSwitch
 15B8:  			EndThread
 15C0:  			Switch  *VarA 
 15CC:  				Case  ==  .Actor:KoopaG 
 15D8:  					Call  SetAnimation  ( *VarA 00000001 00660311 )
 15F0:  				Case  ==  .Actor:KoopaY 
 15FC:  					Call  SetAnimation  ( *VarA 00000001 00660211 )
 1614:  				Case  ==  .Actor:KoopaB 
 1620:  					Call  SetAnimation  ( *VarA 00000001 00660011 )
 1638:  				Case  ==  .Actor:KoopaR 
 1644:  					Call  SetAnimation  ( *VarA 00000001 00660111 )
 165C:  			EndSwitch
 1664:  			Call  SetActorJumpGravity   ( *VarA *Fixed[1.6] )
 1678:  			Call  JumpToGoal        ( *VarA 00000014 .False .False .False )
 1698:  			Call  $Function_8021837C_07 ( *VarA )
 16A8:  			Call  PlaySoundAtActor  ( *VarA 000003E9 )
 16BC:  			Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
 16D8:  			Sub   *Var3  0000000F 
 16E8:  			Call  SetActorPos       ( *VarA *Var3 *Var4 *Var5 )
 1704:  			Switch  *VarA 
 1710:  				Case  ==  .Actor:KoopaG 
 171C:  					Call  SetAnimation  ( *VarA 00000001 00660305 )
 1734:  				Case  ==  .Actor:KoopaY 
 1740:  					Call  SetAnimation  ( *VarA 00000001 00660205 )
 1758:  				Case  ==  .Actor:KoopaB 
 1764:  					Call  SetAnimation  ( *VarA 00000001 00660005 )
 177C:  				Case  ==  .Actor:KoopaR 
 1788:  					Call  SetAnimation  ( *VarA 00000001 00660105 )
 17A0:  			EndSwitch
 17A8:  			Call  SetActorFlagBits  ( *VarA 00040000 .True )
 17C0:  			Call  SetPartFlagBits   ( *VarA 00000001 00020000 .True )
 17DC:  			Call  HPBarToHome       ( *VarA )
 17EC:  			Call  SetActorVar       ( *VarA 00000001 00000004 )
 1804:  		EndIf
 180C:  	EndCaseGroup
 1814:  EndSwitch
 181C:  Return
 1824:  End
}

#new:Script:Battle $Script_80221DB4_07 {
        UseArray  $ActorIDs_Ninja
    0:  If  *Var2  ==  00000000 
   10:  	Call  SetActorVar   ( .Actor:Self 00000005 *Var0 )
   28:  EndIf
   30:  Set   *VarA  *Var0 
   40:  Set   *VarB  *Var1 
   50:  Set   *VarC  *Var2 
   60:  Set   *VarD  *Var3 
   70:  Call  UseIdleAnimation  ( *VarA .False )
   84:  Switch  *VarA 
   90:  	Case  ==  .Actor:KoopaG 
   9C:  		Call  SetAnimation  ( *VarA 00000001 0066031B )
   B4:  	Case  ==  .Actor:KoopaY 
   C0:  		Call  SetAnimation  ( *VarA 00000001 0066021B )
   D8:  	Case  ==  .Actor:KoopaB 
   E4:  		Call  SetAnimation  ( *VarA 00000001 0066001B )
   FC:  	Case  ==  .Actor:KoopaR 
  108:  		Call  SetAnimation  ( *VarA 00000001 0066011B )
  120:  EndSwitch
  128:  Wait  15`
  134:  Switch  *VarC 
  140:  	Case  ==  FFFFFFFF 
  14C:  		Switch  *VarA 
  158:  			Case  ==  .Actor:KoopaG 
  164:  				Call  SetAnimation  ( *VarA 00000001 00660305 )
  17C:  			Case  ==  .Actor:KoopaY 
  188:  				Call  SetAnimation  ( *VarA 00000001 00660205 )
  1A0:  			Case  ==  .Actor:KoopaB 
  1AC:  				Call  SetAnimation  ( *VarA 00000001 00660005 )
  1C4:  			Case  ==  .Actor:KoopaR 
  1D0:  				Call  SetAnimation  ( *VarA 00000001 00660105 )
  1E8:  		EndSwitch
  1F0:  		Switch  *VarB 
  1FC:  			Case  ==  00000004 
  208:  				Switch  *VarD 
  214:  					Case  ==  00000002 
  220:  						Call  SetActorVar   ( *VarA 00000001 00000005 )
  238:  					Case  ==  00000001 
  244:  						Call  SetActorVar   ( *VarA 00000001 00000004 )
  25C:  				EndSwitch
  264:  			Case  ==  00000003 
  270:  				Call  SetActorVar   ( *VarA 00000001 00000005 )
  288:  		EndSwitch
  290:  	Case  ==  00000000 
  29C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  2B4:  		Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
  2D0:  		Call  SetBattleCamTarget    ( *Var2 *Var3 *Var4 )
  2E8:  		Call  UseBattleCamPreset    ( 00000013 )
  2F8:  		Call  SetBattleCamOffsetZ   ( 00000032 )
  308:  		Call  SetBattleCamZoom      ( 00000190 )
  318:  		Call  MoveBattleCamOver     ( 0000001E )
  328:  		If  *VarD  ==  00000002 
  338:  			Wait  25`
  344:  		EndIf
  34C:  		Switch  *VarA 
  358:  			Case  ==  .Actor:KoopaG 
  364:  				Call  SetAnimation  ( *VarA 00000001 00660310 )
  37C:  			Case  ==  .Actor:KoopaY 
  388:  				Call  SetAnimation  ( *VarA 00000001 00660210 )
  3A0:  			Case  ==  .Actor:KoopaB 
  3AC:  				Call  SetAnimation  ( *VarA 00000001 00660010 )
  3C4:  			Case  ==  .Actor:KoopaR 
  3D0:  				Call  SetAnimation  ( *VarA 00000001 00660110 )
  3E8:  		EndSwitch
  3F0:  		Wait  5`
  3FC:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  414:  		Call  GetHomePos    ( *Var0 *Var1 *Var2 *Var3 )
  430:  		Set   *Var3  0000000F 
  440:  		Call  SetGoalPos    ( *VarA *Var1 *Var2 *Var3 )
  45C:  		Switch  *VarB 
  468:  			Case  ==  00000004 
  474:  				Call  AddGoalPos    ( *VarA 00000000 00000036 FFFFFFF6 )
  490:  			Case  ==  00000003 
  49C:  				Call  AddGoalPos    ( *VarA 00000000 00000024 FFFFFFF9 )
  4B8:  		EndSwitch
  4C0:  		Call  AddGoalPos    ( *VarA 0000000F 00000000 00000000 )
  4DC:  		Thread
  4E4:  			Wait  10`
  4F0:  			Switch  *VarA 
  4FC:  				Case  ==  .Actor:KoopaG 
  508:  					Call  SetAnimation  ( *VarA 00000001 00660312 )
  520:  				Case  ==  .Actor:KoopaY 
  52C:  					Call  SetAnimation  ( *VarA 00000001 00660212 )
  544:  				Case  ==  .Actor:KoopaB 
  550:  					Call  SetAnimation  ( *VarA 00000001 00660012 )
  568:  				Case  ==  .Actor:KoopaR 
  574:  					Call  SetAnimation  ( *VarA 00000001 00660112 )
  58C:  			EndSwitch
  594:  		EndThread
  59C:  		Switch  *VarA 
  5A8:  			Case  ==  .Actor:KoopaG 
  5B4:  				Call  SetAnimation  ( *VarA 00000001 00660311 )
  5CC:  			Case  ==  .Actor:KoopaY 
  5D8:  				Call  SetAnimation  ( *VarA 00000001 00660211 )
  5F0:  			Case  ==  .Actor:KoopaB 
  5FC:  				Call  SetAnimation  ( *VarA 00000001 00660011 )
  614:  			Case  ==  .Actor:KoopaR 
  620:  				Call  SetAnimation  ( *VarA 00000001 00660111 )
  638:  		EndSwitch
  640:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.6] )
  654:  		Call  JumpToGoal        ( *VarA 00000014 .False .False .False )
  674:  		Call  $Function_8021837C_07 ( *VarA )
  684:  		Call  PlaySoundAtActor  ( *VarA 000003E9 )
  698:  		Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
  6B4:  		Sub   *Var3  0000000F 
  6C4:  		Call  SetActorPos       ( *VarA *Var3 *Var4 *Var5 )
  6E0:  		Switch  *VarA 
  6EC:  			Case  ==  .Actor:KoopaG 
  6F8:  				Call  SetAnimation  ( *VarA 00000001 00660304 )
  710:  			Case  ==  .Actor:KoopaY 
  71C:  				Call  SetAnimation  ( *VarA 00000001 00660204 )
  734:  			Case  ==  .Actor:KoopaB 
  740:  				Call  SetAnimation  ( *VarA 00000001 00660004 )
  758:  			Case  ==  .Actor:KoopaR 
  764:  				Call  SetAnimation  ( *VarA 00000001 00660104 )
  77C:  		EndSwitch
  784:  		Wait  10`
  790:  		Switch  *VarA 
  79C:  			Case  ==  .Actor:KoopaG 
  7A8:  				Call  SetAnimation  ( *VarA 00000001 0066031B )
  7C0:  			Case  ==  .Actor:KoopaY 
  7CC:  				Call  SetAnimation  ( *VarA 00000001 0066021B )
  7E4:  			Case  ==  .Actor:KoopaB 
  7F0:  				Call  SetAnimation  ( *VarA 00000001 0066001B )
  808:  			Case  ==  .Actor:KoopaR 
  814:  				Call  SetAnimation  ( *VarA 00000001 0066011B )
  82C:  		EndSwitch
  834:  		Call  PlaySoundAtActor  ( *VarA 000020F3 )
  848:  		Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
  864:  		Sub   *Var0  00000016 
  874:  		Add   *Var1  00000013 
  884:  		Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  8C8:  		Wait  30`
  8D4:  		Call  SetActorFlagBits  ( *VarA 00040000 .True )
  8EC:  		Call  SetPartFlagBits   ( *VarA 00000001 00020000 .True )
  908:  		Call  HPBarToHome   ( *VarA )
  918:  		Call  SetActorVar   ( *VarA 00000001 00000003 )
  930:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  948:  		ConstOR  *Var0 00000100 
  958:  		Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  970:  	Case  ==  00000001 
  97C:  		Switch  *VarA 
  988:  			Case  ==  .Actor:KoopaG 
  994:  				Call  SetAnimation  ( *VarA 00000001 00660310 )
  9AC:  			Case  ==  .Actor:KoopaY 
  9B8:  				Call  SetAnimation  ( *VarA 00000001 00660210 )
  9D0:  			Case  ==  .Actor:KoopaB 
  9DC:  				Call  SetAnimation  ( *VarA 00000001 00660010 )
  9F4:  			Case  ==  .Actor:KoopaR 
  A00:  				Call  SetAnimation  ( *VarA 00000001 00660110 )
  A18:  		EndSwitch
  A20:  		Wait  5`
  A2C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  A44:  		Call  GetHomePos    ( *Var0 *Var1 *Var2 *Var3 )
  A60:  		Set   *Var3  0000000F 
  A70:  		Call  SetGoalPos    ( *VarA *Var1 *Var2 *Var3 )
  A8C:  		Call  AddGoalPos    ( *VarA 00000000 00000024 FFFFFFF9 )
  AA8:  		Call  AddGoalPos    ( *VarA 0000000F 00000000 00000000 )
  AC4:  		Thread
  ACC:  			Wait  10`
  AD8:  			Switch  *VarA 
  AE4:  				Case  ==  .Actor:KoopaG 
  AF0:  					Call  SetAnimation  ( *VarA 00000001 00660312 )
  B08:  				Case  ==  .Actor:KoopaY 
  B14:  					Call  SetAnimation  ( *VarA 00000001 00660212 )
  B2C:  				Case  ==  .Actor:KoopaB 
  B38:  					Call  SetAnimation  ( *VarA 00000001 00660012 )
  B50:  				Case  ==  .Actor:KoopaR 
  B5C:  					Call  SetAnimation  ( *VarA 00000001 00660112 )
  B74:  			EndSwitch
  B7C:  		EndThread
  B84:  		Switch  *VarA 
  B90:  			Case  ==  .Actor:KoopaG 
  B9C:  				Call  SetAnimation  ( *VarA 00000001 00660311 )
  BB4:  			Case  ==  .Actor:KoopaY 
  BC0:  				Call  SetAnimation  ( *VarA 00000001 00660211 )
  BD8:  			Case  ==  .Actor:KoopaB 
  BE4:  				Call  SetAnimation  ( *VarA 00000001 00660011 )
  BFC:  			Case  ==  .Actor:KoopaR 
  C08:  				Call  SetAnimation  ( *VarA 00000001 00660111 )
  C20:  		EndSwitch
  C28:  		Call  SetActorJumpGravity   ( *VarA *Fixed[1.6] )
  C3C:  		Call  JumpToGoal        ( *VarA 00000014 .False .False .False )
  C5C:  		Call  $Function_8021837C_07 ( *VarA )
  C6C:  		Call  PlaySoundAtActor  ( *VarA 000003E9 )
  C80:  		Call  GetActorPos       ( *VarA *Var3 *Var4 *Var5 )
  C9C:  		Sub   *Var3  0000000F 
  CAC:  		Call  SetActorPos       ( *VarA *Var3 *Var4 *Var5 )
  CC8:  		Switch  *VarA 
  CD4:  			Case  ==  .Actor:KoopaG 
  CE0:  				Call  SetAnimation  ( *VarA 00000001 00660304 )
  CF8:  			Case  ==  .Actor:KoopaY 
  D04:  				Call  SetAnimation  ( *VarA 00000001 00660204 )
  D1C:  			Case  ==  .Actor:KoopaB 
  D28:  				Call  SetAnimation  ( *VarA 00000001 00660004 )
  D40:  			Case  ==  .Actor:KoopaR 
  D4C:  				Call  SetAnimation  ( *VarA 00000001 00660104 )
  D64:  		EndSwitch
  D6C:  		Wait  10`
  D78:  		Switch  *VarA 
  D84:  			Case  ==  .Actor:KoopaG 
  D90:  				Call  SetAnimation  ( *VarA 00000001 00660305 )
  DA8:  			Case  ==  .Actor:KoopaY 
  DB4:  				Call  SetAnimation  ( *VarA 00000001 00660205 )
  DCC:  			Case  ==  .Actor:KoopaB 
  DD8:  				Call  SetAnimation  ( *VarA 00000001 00660005 )
  DF0:  			Case  ==  .Actor:KoopaR 
  DFC:  				Call  SetAnimation  ( *VarA 00000001 00660105 )
  E14:  		EndSwitch
  E1C:  		Call  SetActorFlagBits  ( *VarA 00040000 .True )
  E34:  		Call  SetPartFlagBits   ( *VarA 00000001 00020000 .True )
  E50:  		Call  HPBarToHome       ( *VarA )
  E60:  		Call  SetActorVar       ( *VarA 00000001 00000004 )
  E78:  EndSwitch
  E80:  Return
  E88:  End
}

#new:Data $CurrentNinjaTargetIndex
{ 00000000 }

% Call      $Function_SetTargetAsNextNinjaKoopa ( hasNextNinja bool )
#new:Function:Battle $Function_SetTargetAsNextNinjaKoopa
{
      PUSH  RA, A0, A1, A2, A3, V0, V1, S0, S1
      COPY  S0, A0
      % get owner actor data
      JAL   ~Func:get_actor
      LW    A0, 148 (S0)
      COPY  S1, V0
      LIO   A0, $ActorIDs_Ninja
      CLEAR V0
      LAW   V1, $CurrentNinjaTargetIndex
      ORI   A3, R0, 4 % amount of koopas
      SLL   A3, A3, 2
      ADDU  A3, A0, A3
      .Loop
      LW    A1, 0 (A0)
      BLEZ  A1, .ReadNextSlot
      NOP
      BNEL  V0, V1, .ReadNextSlot
      ADDI  V0, V0, 1
      % Save target
      SH    A1, 428 (S1) % actor(0x428) = targetActorID
      % add 1 to $CurrentNinjaTargetIndex
      LIO   A2, $CurrentNinjaTargetIndex
      LW    V1, 0 (A2)
      ADDI  V1, V1, 1
      SW    V1, 0 (A2)
      BEQ   R0, R0, .End
      ORI   A2, R0, 1
      .ReadNextSlot
      ADDI  A0, A0, 4
      BEQ   A0, A3, .End
      ADDI  A2, R0, -1
      BEQ   R0, R0, .Loop
      NOP
      .End
      COPY  A0, S0
      LW    A1, C (A0)
      JAL   ~Func:set_variable
      LW    A1, 0 (A1)
      POP   RA, A0, A1, A2, A3, V0, V1, S0, S1
      JR    RA
      ORI   V0, R0, 2
}

#new:Script:Battle $Script_80222C44_07 {
        UseArray  $ActorIDs_Ninja
    0:  Set   *VarA  00000000 
        Call  $WriteAddress ( $CurrentNinjaTargetIndex 2 .False .False .False )
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
   2C:  Label  0
   38:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   4C:  Call  GetActorVar   ( *Var0 00000001 *Var1 )
   64:  If  *Var1  ==  00000000 
   74:  	Call  GetStatusFlags    ( *Var0 *Var1 )
   88:  	If  *Var1  ==  ~Flags:StatusFlags:0 % 0
   98:  		If  *VarA  ==  00000000 
   A8:  			Call  SetActorVar   ( .Actor:Self 00000004 *Var0 )
   C0:  		EndIf
   C8:  		Add   *VarA  00000001 
   D8:  	EndIf
   E0:  EndIf
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
   FC:  If  *Var0  !=  FFFFFFFF 
  10C:  	Goto  0
  118:  EndIf
  120:  Switch  *VarA 
  12C:  	Case  ==  00000000 
  138:  		Return
  140:  	Case  ==  00000001 
  14C:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  164:  		ConstOR  *Var0 .Actor:KoopaG 
  174:  		Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  18C:  		Return
  194:  EndSwitch
  19C:  Call  SetActorVar       ( .Actor:Self 00000003 *VarA )
  1B4:  Set   *Flag[00]  .False 
  1C4:  Set   *VarB  *VarA 
  1D4:  Sub   *VarB  00000001 
        Call  $WriteAddress ( $CurrentNinjaTargetIndex 2 .False .False .False )
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
  200:  Label  1
  20C:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  220:  Call  GetActorVar       ( *Var0 00000001 *Var1 )
  238:  If  *Var1  ==  00000000 
  248:  	Call  GetStatusFlags    ( *Var0 *Var1 )
  25C:  	If  *Var1  ==  ~Flags:StatusFlags:0 % 0
  26C:  		Set   *Var1  *VarA 
  27C:  		Set   *Var2  *VarB 
  28C:  		Exec  $Script_80220588_07 
  298:  		Sub   *VarB  00000001 
  2A8:  	EndIf
  2B0:  EndIf
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
  2CC:  If  *Var0  !=  FFFFFFFF 
  2DC:  	Goto  1
  2E8:  EndIf
  2F0:  Call  802535B4      ( 00000000 )
  300:  Label  2
  30C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  324:  Wait  1`
  330:  If  *Var0  ==  00000003 
  340:  	Goto  2
  34C:  EndIf
  354:  Call  802535B4      ( 00000001 )
  364:  Call  SetActorFlagBits  ( .Actor:Self 02000000 .True )
  37C:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .False )
  398:  Set   *Var0  *VarA 
  3A8:  Mul   *Var0  00000012 
  3B8:  Add   *Var0  00000014 
  3C8:  Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var0 )
  3E4:  Call  SetActorSize  ( .Actor:Self *Var0 0000002D )
  3FC:  Call  SetActorType  ( .Actor:Self 0000009A )
  410:  Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  428:  Call  GetActorPos   ( *Var1 *Var2 *Var3 *Var4 )
  444:  Call  SetActorPos   ( .Actor:Self *Var2 *Var3 *Var4 )
  460:  Set   *VarA  00000000 
  470:  ExecWait  $Script_80223870_07 
  47C:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  494:  Return
  49C:  End
}

#new:Script:Battle $Script_802230E8_07 {
        UseArray  $ActorIDs_Ninja
    0:  Set   *VarA  00000000 
        Call  $WriteAddress ( $CurrentNinjaTargetIndex 2 .False .False .False )
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
   2C:  Label  0
   38:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   4C:  Call  GetActorVar   ( *Var0 00000001 *Var1 )
   64:  If  *Var1  ==  00000000 
   74:  	Call  GetStatusFlags    ( *Var0 *Var1 )
   88:  	If  *Var1  ==  ~Flags:StatusFlags:0 % 0
   98:  		Add   *VarA  00000001 
   A8:  	EndIf
   B0:  EndIf
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
   CC:  If  *Var0  !=  FFFFFFFF 
   DC:  	Goto  0
   E8:  EndIf
   F0:  If  *VarA  ==  00000000 
  100:  	Return
  108:  EndIf
  110:  Set   *Var3  *VarA 
  120:  Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  138:  Add   *VarA  *Var0 
  148:  Call  SetActorVar   ( .Actor:Self 00000003 *VarA )
  160:  Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  178:  ConstAND  *Var0 FFFFFEFF 
  188:  Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  1A0:  Set   *Var0  .Actor:KoopaG 
  1B0:  Loop  00000004 
  1BC:  	Call  ActorExists   ( *Var0 *Var1 )
  1D0:  	If  *Var1  ==  .True 
  1E0:  		Call  GetActorVar   ( *Var0 00000001 *Var2 )
  1F8:  		If  *Var2  ==  00000003 
  208:  			Set   *Var1  *VarA 
  218:  			Set   *Var2  FFFFFFFF 
  228:  			Exec  $Script_80221DB4_07 
  234:  			BreakLoop
  23C:  		EndIf
  244:  	EndIf
  24C:  	Add   *Var0  00000001 
  25C:  EndLoop
  264:  Set   *Var2  00000000 
        Call  $WriteAddress ( $CurrentNinjaTargetIndex 2 .False .False .False )
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
  290:  Label  1
  29C:  Call  GetOwnerTarget    ( *Var0 *Var1 )
  2B0:  Call  GetActorVar   ( *Var0 00000001 *Var8 )
  2C8:  If  *Var8  ==  00000000 
  2D8:  	Set   *Var1  *VarA 
  2E8:  	Exec  $Script_80221DB4_07 
  2F4:  	Add   *Var2  00000001 
  304:  EndIf
        Call  $Function_SetTargetAsNextNinjaKoopa ( *Var0 )
  320:  If  *Var0  !=  FFFFFFFF 
  330:  	Goto  1
  33C:  EndIf
  344:  Call  802535B4      ( 00000000 )
  354:  Label  2
  360:  Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  378:  If  *Var0  !&  00000100 
  388:  	Wait  1`
  394:  	Goto  2
  3A0:  EndIf
  3A8:  Call  802535B4      ( 00000001 )
  3B8:  Call  SetActorFlagBits  ( .Actor:Self 02000000 .True )
  3D0:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .False )
  3EC:  Set   *Var0  *VarA 
  3FC:  Mul   *Var0  00000012 
  40C:  Add   *Var0  00000014 
  41C:  Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var0 )
  438:  Call  SetActorSize  ( .Actor:Self *Var0 0000002D )
  450:  Call  SetActorType  ( .Actor:Self 0000009A )
  464:  Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
  47C:  Call  GetActorPos   ( *Var1 *Var2 *Var3 *Var4 )
  498:  Call  SetActorPos   ( .Actor:Self *Var2 *Var3 *Var4 )
  4B4:  Set   *VarA  00000000 
  4C4:  ExecWait  $Script_80223870_07 
  4D0:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  4E8:  Return
  4F0:  End
}

#new:Script:Battle $Script_802235E0_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   18:  If  *Var0  ==  00000002 
   28:  	Return
   30:  EndIf
   38:  Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   50:  ConstOR  *Var0 00000010 
   60:  Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   78:  Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
   90:  Set   *VarA  00000001 
   A0:  ExecWait  $Script_80223870_07 
   AC:  Call  GetActorVar   ( .Actor:Self 00000003 *VarA )
   C4:  Set   *Var0  *VarA 
   D4:  Mul   *Var0  00000012 
   E4:  Add   *Var0  00000005 
   F4:  Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var0 )
  110:  Call  SetActorSize  ( .Actor:Self *Var0 0000002D )
  128:  Return
  130:  End
}

#new:Script:Battle $Script_80223718_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  SetActorVar   ( .Actor:Self 00000001 00000003 )
   18:  Call  GetLastEvent  ( .Actor:Self *Var0 )
   2C:  If  *Var0  !=  .Event:BurnHit % E
   3C:  	Set   *VarA  00000005 
   4C:  Else
   54:  	Set   *VarA  00000006 
   64:  EndIf
   6C:  ExecWait  $Script_80223870_07 
   78:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
   90:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   AC:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00020000 .True )
   C8:  Call  GetActorVar       ( .Actor:FakeBowser 00000000 *Var0 )
   E0:  ConstAND  *Var0 FFFFFFEF 
   F0:  Call  SetActorVar       ( .Actor:FakeBowser 00000000 *Var0 )
  108:  Call  GetActorVar       ( .Actor:FakeBowser 00000000 *Var0 )
  120:  ConstAND  *Var0 FFFFFFDF 
  130:  Call  SetActorVar       ( .Actor:FakeBowser 00000000 *Var0 )
  148:  Return
  150:  End
}

#new:Script:Battle $Script_80223870_07 {
        UseArray  $ActorIDs_Ninja
    0:  Call  ActorExists   ( .Actor:KoopaG *Var0 )
   14:  If  *Var0  ==  .True 
   24:  	Exec  $Script_802257A8_07 *Var1 
   34:  EndIf
   3C:  Call  ActorExists   ( .Actor:KoopaY *Var0 )
   50:  If  *Var0  ==  .True 
   60:  	Exec  $Script_8022E688_07 *Var1 
   70:  EndIf
   78:  Call  ActorExists   ( .Actor:KoopaB *Var0 )
   8C:  If  *Var0  ==  .True 
   9C:  	Exec  $Script_8022B6E8_07 *Var1 
   AC:  EndIf
   B4:  Call  ActorExists   ( .Actor:KoopaR *Var0 )
   C8:  If  *Var0  ==  .True 
   D8:  	Exec  $Script_80228748_07 *Var1 
   E8:  EndIf
   F0:  Label  0
   FC:  DoesScriptExist  *Var1 *Var0 
  10C:  If  *Var0  ==  00000001 
  11C:  	Wait  1`
  128:  	Goto  0
  134:  EndIf
  13C:  Return
  144:  End
}

#new:Script:Battle $Script_Idle_802239BC_07 {
        UseArray  $ActorIDs_Ninja
    0:  Label  0
    C:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   24:  If  *Var0  !=  00000002 
   34:  	Wait  1`
   40:  	Goto  0
   4C:  EndIf
   54:  Call  ActorExists   ( .Actor:KoopaG *Var0 )
   68:  If  *Var0  !=  .False 
   78:  	Call  GetActorPos   ( .Actor:KoopaG *VarA *VarE *VarF )
   94:  EndIf
   9C:  Call  ActorExists   ( .Actor:KoopaY *Var0 )
   B0:  If  *Var0  !=  .False 
   C0:  	Call  GetActorPos   ( .Actor:KoopaY *VarC *VarE *VarF )
   DC:  EndIf
   E4:  Call  ActorExists   ( .Actor:KoopaB *Var0 )
   F8:  If  *Var0  !=  .False 
  108:  	Call  GetActorPos   ( .Actor:KoopaB *VarD *VarE *VarF )
  124:  EndIf
  12C:  Call  ActorExists   ( .Actor:KoopaR *Var0 )
  140:  If  *Var0  !=  .False 
  150:  	Call  GetActorPos   ( .Actor:KoopaR *VarB *VarE *VarF )
  16C:  EndIf
  174:  Label  1
  180:  Call  ActorExists   ( .Actor:KoopaG *Var0 )
  194:  If  *Var0  !=  .False 
  1A4:  	Call  GetActorVar   ( .Actor:KoopaG 00000001 *Var0 )
  1BC:  	Switch  *Var0 
  1C8:  		CaseOR  ==  00000003 
  1D4:  		CaseOR  ==  00000004 
  1E0:  		CaseOR  ==  00000005 
  1EC:  		CaseOR  ==  00000006 
  1F8:  			Call  RandInt       ( 00000002 *Var0 )
  20C:  			Set   *Var1  00000001 
  21C:  			Sub   *Var0  *Var1 
  22C:  			Add   *Var0  *VarA 
  23C:  			Call  GetActorPos   ( .Actor:KoopaG *Var1 *Var2 *Var3 )
  258:  			Call  SetActorPos   ( .Actor:KoopaG *Var0 *Var2 *Var3 )
  274:  		EndCaseGroup
  27C:  	EndSwitch
  284:  EndIf
  28C:  Call  ActorExists   ( .Actor:KoopaY *Var0 )
  2A0:  If  *Var0  !=  .False 
  2B0:  	Call  GetActorVar   ( .Actor:KoopaY 00000001 *Var0 )
  2C8:  	Switch  *Var0 
  2D4:  		CaseOR  ==  00000003 
  2E0:  		CaseOR  ==  00000004 
  2EC:  		CaseOR  ==  00000005 
  2F8:  		CaseOR  ==  00000006 
  304:  			Call  RandInt       ( 00000002 *Var0 )
  318:  			Set   *Var1  00000001 
  328:  			Sub   *Var0  *Var1 
  338:  			Add   *Var0  *VarC 
  348:  			Call  GetActorPos   ( .Actor:KoopaY *Var1 *Var2 *Var3 )
  364:  			Call  SetActorPos   ( .Actor:KoopaY *Var0 *Var2 *Var3 )
  380:  		EndCaseGroup
  388:  	EndSwitch
  390:  EndIf
  398:  Call  ActorExists   ( .Actor:KoopaB *Var0 )
  3AC:  If  *Var0  !=  .False 
  3BC:  	Call  GetActorVar   ( .Actor:KoopaB 00000001 *Var0 )
  3D4:  	Switch  *Var0 
  3E0:  		CaseOR  ==  00000003 
  3EC:  		CaseOR  ==  00000004 
  3F8:  		CaseOR  ==  00000005 
  404:  		CaseOR  ==  00000006 
  410:  			Call  RandInt       ( 00000002 *Var0 )
  424:  			Set   *Var1  00000001 
  434:  			Sub   *Var0  *Var1 
  444:  			Add   *Var0  *VarD 
  454:  			Call  GetActorPos   ( .Actor:KoopaB *Var1 *Var2 *Var3 )
  470:  			Call  SetActorPos   ( .Actor:KoopaB *Var0 *Var2 *Var3 )
  48C:  		EndCaseGroup
  494:  	EndSwitch
  49C:  EndIf
  4A4:  Call  ActorExists   ( .Actor:KoopaR *Var0 )
  4B8:  If  *Var0  !=  .False 
  4C8:  	Call  GetActorVar   ( .Actor:KoopaR 00000001 *Var0 )
  4E0:  	Switch  *Var0 
  4EC:  		CaseOR  ==  00000003 
  4F8:  		CaseOR  ==  00000004 
  504:  		CaseOR  ==  00000005 
  510:  		CaseOR  ==  00000006 
  51C:  			Call  RandInt       ( 00000002 *Var0 )
  530:  			Set   *Var1  00000001 
  540:  			Sub   *Var0  *Var1 
  550:  			Add   *Var0  *VarB 
  560:  			Call  GetActorPos   ( .Actor:KoopaR *Var1 *Var2 *Var3 )
  57C:  			Call  SetActorPos   ( .Actor:KoopaR *Var0 *Var2 *Var3 )
  598:  		EndCaseGroup
  5A0:  	EndSwitch
  5A8:  EndIf
  5B0:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5C8:  If  *Var0  ==  00000002 
  5D8:  	Wait  2`
  5E4:  	Goto  1
  5F0:  EndIf
  5F8:  Call  ActorExists   ( .Actor:KoopaG *Var0 )
  60C:  If  *Var0  !=  .False 
  61C:  	Call  GetActorVar   ( .Actor:KoopaG 00000001 *Var0 )
  634:  	Switch  *Var0 
  640:  		CaseOR  ==  00000003 
  64C:  		CaseOR  ==  00000004 
  658:  		CaseOR  ==  00000005 
  664:  		CaseOR  ==  00000006 
  670:  			Call  GetActorPos   ( .Actor:KoopaG *Var1 *Var2 *Var3 )
  68C:  			Call  SetActorPos   ( .Actor:KoopaG *VarA *Var2 *Var3 )
  6A8:  		EndCaseGroup
  6B0:  	EndSwitch
  6B8:  EndIf
  6C0:  Call  ActorExists   ( .Actor:KoopaY *Var0 )
  6D4:  If  *Var0  !=  .False 
  6E4:  	Call  GetActorVar   ( .Actor:KoopaY 00000001 *Var0 )
  6FC:  	Switch  *Var0 
  708:  		CaseOR  ==  00000003 
  714:  		CaseOR  ==  00000004 
  720:  		CaseOR  ==  00000005 
  72C:  		CaseOR  ==  00000006 
  738:  			Call  GetActorPos   ( .Actor:KoopaY *Var1 *Var2 *Var3 )
  754:  			Call  SetActorPos   ( .Actor:KoopaY *VarC *Var2 *Var3 )
  770:  		EndCaseGroup
  778:  	EndSwitch
  780:  EndIf
  788:  Call  ActorExists   ( .Actor:KoopaB *Var0 )
  79C:  If  *Var0  !=  .False 
  7AC:  	Call  GetActorVar   ( .Actor:KoopaB 00000001 *Var0 )
  7C4:  	Switch  *Var0 
  7D0:  		CaseOR  ==  00000003 
  7DC:  		CaseOR  ==  00000004 
  7E8:  		CaseOR  ==  00000005 
  7F4:  		CaseOR  ==  00000006 
  800:  			Call  GetActorPos   ( .Actor:KoopaB *Var1 *Var2 *Var3 )
  81C:  			Call  SetActorPos   ( .Actor:KoopaB *VarD *Var2 *Var3 )
  838:  		EndCaseGroup
  840:  	EndSwitch
  848:  EndIf
  850:  Call  ActorExists   ( .Actor:KoopaR *Var0 )
  864:  If  *Var0  !=  .False 
  874:  	Call  GetActorVar   ( .Actor:KoopaR 00000001 *Var0 )
  88C:  	Switch  *Var0 
  898:  		CaseOR  ==  00000003 
  8A4:  		CaseOR  ==  00000004 
  8B0:  		CaseOR  ==  00000005 
  8BC:  		CaseOR  ==  00000006 
  8C8:  			Call  GetActorPos   ( .Actor:KoopaR *Var1 *Var2 *Var3 )
  8E4:  			Call  SetActorPos   ( .Actor:KoopaR *VarB *Var2 *Var3 )
  900:  		EndCaseGroup
  908:  	EndSwitch
  910:  EndIf
  918:  Wait  1`
  924:  Goto  0
  930:  Return
  938:  End
}

#new:Script:Battle $Script_HandleEvent_802242FC_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0 
   34:  	Case  ==  .Event:HitCombo % 9
   40:  		Call  GetBattleFlags    ( *Var0 )
   50:  		If  *Var0  &  00080000 
   60:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   78:  			ConstOR  *Var0 00000080 
   88:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   A0:  		Else
   A8:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   C0:  			ConstOR  *Var0 00000040 
   D0:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   E8:  		EndIf
   F0:  		Set   *VarA  00000002 
  100:  		ExecWait  $Script_80223870_07 
  10C:  		Wait  30`
  118:  		Call  GetLastElement    ( *Var0 )
  128:  		If  *Var0  &  00000220 
  138:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  150:  			ConstOR  *Var0 00000040 
  160:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  178:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  190:  			ConstOR  *Var0 00000080 
  1A0:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  1B8:  		EndIf
  1C0:  		ExecWait  $Script_802235E0_07 
  1CC:  	Case  ==  .Event:Hit % A
  1D8:  		Call  GetBattleFlags    ( *Var0 )
  1E8:  		If  *Var0  &  00080000 
  1F8:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  210:  			ConstOR  *Var0 00000080 
  220:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  238:  		Else
  240:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  258:  			ConstOR  *Var0 00000040 
  268:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  280:  		EndIf
  288:  		Call  GetLastElement    ( *Var0 )
  298:  		If  *Var0  &  00000220 
  2A8:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  2C0:  			ConstOR  *Var0 00000040 
  2D0:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  2E8:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  300:  			ConstOR  *Var0 00000080 
  310:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  328:  		EndIf
  330:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  348:  		If  *Var0  &  00000040 
  358:  			If  *Var0  &  00000080 
  368:  				ExecWait  $Script_80223718_07 
  374:  				Wait  20`
  380:  				Call  UseIdleAnimation  ( .Actor:Self .True )
  394:  				Return
  39C:  			EndIf
  3A4:  		EndIf
  3AC:  		Set   *VarA  00000002 
  3BC:  		ExecWait  $Script_80223870_07 
  3C8:  		Wait  30`
  3D4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  3EC:  		If  *Var0  !=  00000002 
  3FC:  			ExecWait  $Script_802235E0_07 
  408:  		EndIf
  410:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  428:  		If  *Var0  &  00000010 
  438:  			If  *Var0  !&  00000020 
  448:  				Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  %460:  				Call  ActorSpeak    ( 000C0109 *Var0 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
  480:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  498:  				ConstOR  *Var0 00000020 
  4A8:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  4C0:  				Wait  20`
  4CC:  			EndIf
  4D4:  		EndIf
  4DC:  	Case  ==  .Event:BurnHit % E
  4E8:  		Call  GetBattleFlags    ( *Var0 )
  4F8:  		If  *Var0  &  00080000 
  508:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  520:  			ConstOR  *Var0 00000080 
  530:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  548:  		Else
  550:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  568:  			ConstOR  *Var0 00000040 
  578:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  590:  		EndIf
  598:  		Call  GetLastElement    ( *Var0 )
  5A8:  		If  *Var0  &  00000220 
  5B8:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  5D0:  			ConstOR  *Var0 00000040 
  5E0:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  5F8:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  610:  			ConstOR  *Var0 00000080 
  620:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  638:  		EndIf
  640:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  658:  		If  *Var0  &  00000040 
  668:  			If  *Var0  &  00000080 
  678:  				ExecWait  $Script_80223718_07 
  684:  				Wait  20`
  690:  				Call  UseIdleAnimation  ( .Actor:Self .True )
  6A4:  				Return
  6AC:  			EndIf
  6B4:  		EndIf
  6BC:  		Set   *VarA  00000003 
  6CC:  		ExecWait  $Script_80223870_07 
  6D8:  		Wait  30`
  6E4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  6FC:  		If  *Var0  !=  00000002 
  70C:  			ExecWait  $Script_802235E0_07 
  718:  		EndIf
  720:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  738:  		If  *Var0  &  00000010 
  748:  			If  *Var0  !&  00000020 
  758:  				Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  %770:  				Call  ActorSpeak    ( 000C0109 *Var0 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
  790:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  7A8:  				ConstOR  *Var0 00000020 
  7B8:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  7D0:  				Wait  20`
  7DC:  			EndIf
  7E4:  		EndIf
  7EC:  	Case  ==  00000017 % 17
  7F8:  		Set   *VarA  00000004 
  808:  		ExecWait  $Script_80223870_07 
  814:  	Case  ==  .Event:Immune % 19
  820:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  838:  		If  *Var0  ==  00000002 
  848:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  860:  			ConstOR  *Var0 00000040 
  870:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  888:  			Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  8A0:  			ConstOR  *Var0 00000080 
  8B0:  			Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  8C8:  		EndIf
  8D0:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  8E8:  		If  *Var0  &  00000040 
  8F8:  			If  *Var0  &  00000080 
  908:  				ExecWait  $Script_80223718_07 
  914:  				Wait  20`
  920:  				Call  UseIdleAnimation  ( .Actor:Self .True )
  934:  				Return
  93C:  			EndIf
  944:  		EndIf
  94C:  		Set   *VarA  00000004 
  95C:  		ExecWait  $Script_80223870_07 
  968:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  980:  		If  *Var0  &  00000010 
  990:  			If  *Var0  !&  00000020 
  9A0:  				Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  %9B8:  				Call  ActorSpeak    ( 000C0109 *Var0 00000001 FFFFFFFF FFFFFFFF ) % Whooooaa... We're going over!!
  9D8:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  9F0:  				ConstOR  *Var0 00000020 
  A00:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  A18:  				Wait  20`
  A24:  			EndIf
  A2C:  		EndIf
  A34:  	CaseOR  ==  .Event:Death % 20
  A40:  	CaseOR  ==  .Event:BurnDeath % 24
  A4C:  	EndCaseGroup
  A54:  	Default
  A5C:  EndSwitch
  A64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  A78:  Return
  A80:  End
}

#new:Script:Battle $Script_TakeTurn_KoopaBros { % Script_TakeTurn_80224D84_07
        UseArray  $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
   2C:  Switch  *Var0 
   38:  	Case  ==  00000000 
   44:  	Case  ==  00000001 
   50:  	Case  ==  00000002 
   5C:  		Wait  30`
   68:  		Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
   80:  		Set   *VarA  00000000 
   90:  		ExecWait  $Script_80223870_07 
   9C:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   B4:  		ConstAND  *Var0 FFFFFFEF 
   C4:  		Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   DC:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   F4:  		ConstAND  *Var0 FFFFFFDF 
  104:  		Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  11C:  		Call  GetActorVar   ( .Actor:Self 00000003 *VarA )
  134:  		Set   *Var0  *VarA 
  144:  		Mul   *Var0  00000012 
  154:  		Add   *Var0  00000014 
  164:  		Call  SetTargetOffset   ( .Actor:Self 00000002 FFFFFFFC *Var0 )
  180:  		Call  SetActorSize  ( .Actor:Self *Var0 0000002D )
  198:  	Case  ==  00000003 
  1A4:  EndSwitch
  1AC:  Set   *Var0  .Actor:KoopaG 
  1BC:  Loop  00000004 
  1C8:  	Call  ActorExists   ( *Var0 *Var1 )
  1DC:  	If  *Var1  ==  .True 
  1EC:  		Call  GetStatusFlags    ( *Var0 *Var1 )
  200:  		If  *Var1  ==  ~Flags:StatusFlags:0 % 0
  210:  			Call  GetActorVar   ( *Var0 00000001 *Var1 )
  228:  			If  *Var1  ==  00000001 
  238:  				Set   *Flag[00]  .True 
  248:  				BreakLoop
  250:  			EndIf
  258:  		EndIf
  260:  	EndIf
  268:  	Add   *Var0  00000001 
  278:  EndLoop
  280:  If  *Flag[00]  ==  .True 
  290:  	Call  UseBattleCamPreset    ( 00000013 )
  2A0:  	Call  SetBattleCamTarget    ( 0000005A 00000000 00000000 )
  2B8:  	Call  SetBattleCamZoom      ( 0000015E )
  2C8:  	Call  SetBattleCamOffsetZ   ( 00000028 )
  2D8:  	Call  MoveBattleCamOver     ( 0000000F )
  2E8:  	Wait  15`
  2F4:  EndIf
  2FC:  Set   *VarA  00000009 
  30C:  ExecWait  $Script_80223870_07 
  318:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  330:  Switch  *Var0 
  33C:  	Case  ==  00000001 
  348:  		ExecWait  $Script_802230E8_07 
  354:  	Default
  35C:  		ExecWait  $Script_80222C44_07 
  368:  EndSwitch
  370:  Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  388:  If  *Var0  &  .Actor:KoopaG 
  398:  	Call  UseBattleCamPreset    ( 00000002 )
  3A8:  	Call  MoveBattleCamOver     ( 0000000F )
  3B8:  	Set   *VarA  00000008 
  3C8:  	ExecWait  $Script_80223870_07 
  3D4:  	Label  7B
  3E0:  	Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  3F8:  	If  *Var0  &  .Actor:KoopaG 
  408:  		Wait  1`
  414:  		Goto  7B
  420:  	EndIf
  428:  	Set   *VarA  0000000A 
  438:  	ExecWait  $Script_80223870_07 
  444:  	Wait  5`
  450:  	Return
  458:  EndIf
  460:  Set   *VarA  0000000A 
  470:  ExecWait  $Script_80223870_07 
  47C:  Wait  5`
  488:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4A0:  If  *Var0  ==  00000003 
  4B0:  	Return
  4B8:  EndIf
  4C0:  Call  UseBattleCamPreset    ( 00000002 )
  4D0:  Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  4E8:  If  *Var0  !&  00000004 
  4F8:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  /%510:  	Switch  *Var0 
  51C:  		Case  ==  .Actor:KoopaG 
  528:  			Call  ActorSpeak    ( 000C0108 *Var0 00000001 00660314 00660304 ) % The Koopa Bros. special: super spinning attack!
  548:  		Case  ==  .Actor:KoopaY 
  554:  			Call  ActorSpeak    ( 000C0108 *Var0 00000001 00660214 00660204 ) % The Koopa Bros. special: super spinning attack!
  574:  		Case  ==  .Actor:KoopaB 
  580:  			Call  ActorSpeak    ( 000C0108 *Var0 00000001 00660014 00660004 ) % The Koopa Bros. special: super spinning attack!
  5A0:  		Case  ==  .Actor:KoopaR 
  5AC:  			Call  ActorSpeak    ( 000C0108 *Var0 00000001 00660114 00660104 ) % The Koopa Bros. special: super spinning attack!
  5CC:  	EndSwitch%/
  5D4:  	Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  5EC:  	ConstOR  *Var0 00000004 
  5FC:  	Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  614:  EndIf
  61C:  Set   *VarA  00000007 
  62C:  ExecWait  $Script_80223870_07 
  638:  Label  A
  644:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  65C:  Wait  1`
  668:  If  *Var0  !=  00000000 
  678:  	Goto  A
  684:  EndIf
  68C:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  6A4:  Return
  6AC:  End
}

#new:Script:Battle $Script_NextTurn_80225438_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
   28:  Call  SetEnemyHP        ( .Actor:Self *Var0 )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  Switch  *Var0 
   58:  	Case  ==  0000000A 
   64:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   7C:  		ConstAND  *Var0 FFFFFFBF 
   8C:  		Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   A4:  		Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   BC:  		ConstAND  *Var0 FFFFFF7F 
   CC:  		Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
   E4:  	Case  ==  0000000C 
   F0:  	Case  ==  0000000B 
   FC:  EndSwitch
        % check if everyone already died
        Set   *Var0 .Actor:KoopaG
        Add   *Var0 .Actor:KoopaY
        Add   *Var0 .Actor:KoopaB
        Add   *Var0 .Actor:KoopaR
        If *Var0 < 0
            Set   .Actor:FakeBowser -1
            Call  RemoveActor ( .Actor:Self )
            Return
        EndIf
  104:  Call  UseIdleAnimation  ( .Actor:Self .True )
  118:  Return
  120:  End
}

#new:DefenseTable $DefenseTable_80225560_07 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8022556C_07 {
.Element:Normal 00000000
.Element:End
}

#new:IdleAnimations $IdleAnimations_80225670_07 {
.Status:Normal    00660304
.Status:Stone     00660300
.Status:Sleep     00660315
.Status:Poison    00660300
.Status:Stop      00660300
.Status:Static    00660300
.Status:Paralyze  00660300
.Status:Paralyze  00660300
.Status:Dizzy     00660318
.Status:Dizzy     00660318
.Status:End
}

#new:IdleAnimations $IdleAnimations_802256C4_07 {
.Status:Normal    00660305
.Status:Stone     00660301
.Status:Poison    00660301
.Status:Stop      00660301
.Status:Static    00660301
.Status:Paralyze  00660301
.Status:Paralyze  00660301
.Status:End
}

#new:IdleAnimations $IdleAnimations_80225700_07 {
.Status:Normal    0066030D
.Status:Stone     00660301
.Status:Poison    00660301
.Status:Stop      00660301
.Status:Static    00660301
.Status:Paralyze  00660301
.Status:Paralyze  00660301
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022573C_07 {
.Status:Normal    0066030C
.Status:Stone     00660317
.Status:Sleep     00660317
.Status:Poison    00660317
.Status:Stop      00660317
.Status:Static    00660317
.Status:Paralyze  00660317
.Status:Paralyze  00660317
.Status:Dizzy     00660322
.Status:Dizzy     00660322
.Status:End
}

#new:IdleAnimations $IdleAnimations_80225790_07 {
.Status:Normal    0066030A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022579C_07 {
.Status:Normal    0066030C
.Status:End
}

#new:Script:Battle $Script_802257A8_07 {
        UseArray  $ActorIDs_Ninja
    0:  Call  SetOwnerID        ( .Actor:KoopaG )
   10:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   24:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Switch  *VarA 
   64:  	Case  ==  00000000 
   70:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   88:  		Switch  *Var0 
   94:  			Case  ==  00000003 
   A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225670_07 )
   B8:  				Call  SetAnimation      ( .Actor:Self 00000001 00660304 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802256C4_07 )
  10C:  				Call  SetAnimation      ( .Actor:Self 00000001 00660305 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  158:  		Switch  *Var0 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait  5`
  1A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225700_07 )
  1B8:  				Call  SetAnimation      ( .Actor:Self 00000001 0066030D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  204:  		Switch  *Var0 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var0  00000001 
  250:  				SetConst  *Var1  0066030B 
  260:  				ExecWait  DoNormalHit 
  26C:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  284:  				ConstAND  *Var0 000000C0 
  294:  				If  *Var0  !=  000000C0 
  2A4:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225700_07 )
  2BC:  					Call  SetAnimation      ( .Actor:Self 00000001 0066030D )
  2D4:  				Else
  2DC:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790_07 )
  2F4:  					Call  SetAnimation      ( .Actor:Self 00000001 0066030A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  348:  		Switch  *Var0 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call  $Function_80218B48_07 ( 0000000E )
  394:  				SetConst  *Var0  00000001 
  3A4:  				SetConst  *Var1  0066030E 
  3B4:  				SetConst  *Var2  FFFFFFFF 
  3C4:  				ExecWait  DoBurnHit 
  3D0:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  3E8:  				ConstAND  *Var0 000000C0 
  3F8:  				If  *Var0  !=  000000C0 
  408:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225700_07 )
  420:  					Call  SetAnimation      ( .Actor:Self 00000001 0066030D )
  438:  				Else
  440:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790_07 )
  458:  					Call  SetAnimation      ( .Actor:Self 00000001 0066030A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4AC:  		Switch  *Var0 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var0  00000001 
  4D4:  				SetConst  *Var1  00660308 
  4E4:  				ExecWait  DoImmune 
  4F0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var0  00000001 
  53C:  				SetConst  *Var1  0066031F 
  54C:  				ExecWait  DoImmune 
  558:  				Call  SetAnimation  ( .Actor:Self 00000001 00660320 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait  15`
  58C:  	Case  ==  00000005 
  598:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5B0:  		Switch  *Var0 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set   *Flag[00]  .False 
  5FC:  				If  *Var0  ==  00000003 
  60C:  					Set   *Flag[00]  .True 
  61C:  				EndIf
  624:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  638:  				Call  $Function_802185B0_07 ( *Var0 *Var1 *Var2 )
  650:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066030A )
  684:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790_07 )
  69C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  6BC:  				If  *Flag[00]  ==  .True 
  6CC:  					Call  $Function_802183E0_07 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call  SetAnimation  ( .Actor:Self 00000001 0066030C )
  72C:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022579C_07 )
  744:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  764:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  784:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  79C:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7D4:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  				Call  HPBarToHome   ( .Actor:Self )
  800:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022573C_07 )
  818:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022556C_07 )
  830:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  848:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  860:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  8B0:  		Switch  *Var0 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set   *Flag[00]  .False 
  8FC:  				If  *Var0  ==  00000003 
  90C:  					Set   *Flag[00]  .True 
  91C:  				EndIf
  924:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  938:  				Call  $Function_802185B0_07 ( *Var0 *Var1 *Var2 )
  950:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  96C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066030E )
  984:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225790_07 )
  99C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  9BC:  				If  *Flag[00]  ==  .True 
  9CC:  					Call  $Function_802183E0_07 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A30:  				Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  A48:  				DivF  *Var3  *Fixed[2.0] 
  A58:  				AddF  *Var1  *Var3 
  A68:  				AddF  *Var2  *Fixed[5.0] 
  A78:  				DivF  *Var3  *Fixed[10.0] 
  A88:  				Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066030C )
  AE4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022579C_07 )
  AFC:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  B1C:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  B3C:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  B54:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  B70:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B8C:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  BA8:  				Call  HPBarToHome   ( .Actor:Self )
  BB8:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022573C_07 )
  BD0:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022556C_07 )
  BE8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  C00:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  C18:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C68:  		Switch  *Var0 
  C74:  			Case  ==  00000001 
  C80:  				Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  C98:  				Sub   *Var0  00000001 
  CA8:  				If  *Var0  >  00000000 
  CB8:  					Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
  CD0:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait  20`
  CF8:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait  12`
  D40:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D58:  					Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D74:  					Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set   *Var0  00000000 
  DA0:  						Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop  00000004 
  DC8:  							Add   *Var0  00000016 
  DD8:  							Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  DF4:  							Wait  1`
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  E2C:  					Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  E40:  					Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E5C:  					Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
  E7C:  					Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  E90:  					Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
  EFC:  					Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80225560_07 )
  F14:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80225670_07 )
  F2C:  					Call  SetAnimation      ( .Actor:Self 00000001 00660304 )
  F44:  					Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait  20`
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FA0:  		Switch  *Var0 
  FAC:  			Case  ==  00000002 
  FB8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FFC:  		Switch  *Var0 
 1008:  			Case  ==  00000003 
 1014:  				Call  SetAnimation  ( .Actor:Self 00000001 00660308 )
 102C:  				Wait  10`
 1038:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1050:  				Switch  *Var0 
 105C:  					Case  ==  00000004 
 1068:  						Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660307 )
 10DC:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 10F8:  				Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 0000003C )
 1114:  				Wait  60`
 1120:  				Thread
 1128:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 114C:  					Switch  *Var0 
 1158:  						Case  ==  .HitResult:Lucky % 5
 1164:  							Wait  20`
 1170:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  .HitResult:Miss % 6
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call  GetActorVar   ( .Actor:FakeBowser 00000004 *VarA )
 11D0:  					Label  0
 11DC:  					Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
 11F8:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 1214:  					If  *Var0  >  *Var3 
 1224:  						Wait  1`
 1230:  						Goto  0
 123C:  					EndIf
 1244:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 1258:  					Call  SetGoalToTarget   ( .Actor:Self )
 1268:  					Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var1 )
 1280:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 *Var1 00000020 )
 12A8:  				EndThread
 12B0:  				Call  UseBattleCamPreset    ( 00000002 )
 12C0:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 12D4:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 12F0:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 1304:  				Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var0 )
 131C:  				Switch  *Var0 
 1328:  					Case  ==  00000004 
 1334:  						Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 13AC:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 13C8:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 13E0:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 13F4:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set   *Var0  00000000 
 1440:  					Loop  00000028 
 144C:  						Sub   *Var0  0000002D 
 145C:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 147C:  						Wait  1`
 1488:  					EndLoop
 1490:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 14F0:  				Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 150C:  				Set   *Var4  0000000F 
 151C:  				Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1538:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *VarB )
 1550:  				Set   *Var0  *VarB 
 1560:  				Sub   *Var0  00000001 
 1570:  				Mul   *Var0  00000012 
 1580:  				Switch  *VarB 
 158C:  					Case  ==  00000004 
 1598:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1620:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1640:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1658:  				Switch  *Var0 
 1664:  					Case  ==  00000004 
 1670:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 168C:  						Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 0000003C )
 16A8:  						Wait  60`
 16B4:  					Case  ==  00000003 
 16C0:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 16DC:  						Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 00000032 )
 16F8:  						Wait  50`
 1704:  					Case  ==  00000002 
 1710:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 172C:  						Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 00000028 )
 1748:  						Wait  40`
 1754:  				EndSwitch
 175C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
 1774:  				Wait  10`
 1780:  				Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
 1794:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 17A8:  				Call  SetAnimation  ( .Actor:Self 00000001 0066031B )
 17C0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 17DC:  				Sub   *Var0  00000016 
 17EC:  				Add   *Var1  00000013 
 17FC:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait  30`
 184C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660304 )
 1864:  				Wait  20`
 1870:  				Call  SetActorVar   ( .Actor:FakeBowser 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066031F )
 18C4:  				Wait  10`
 18D0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660307 )
 18E8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1904:  				Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 0000003C )
 1920:  				Wait  60`
 192C:  				Call  EnableActorBlur       ( .Actor:Self 00000001 )
 1940:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1958:  				Switch  *Var0 
 1964:  					Case  ==  00000004 
 1970:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 19E8:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 1A04:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 1A20:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 1A38:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 1A4C:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set   *Var0  00000000 
 1A98:  					Loop  00000028 
 1AA4:  						Sub   *Var0  0000002D 
 1AB4:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 1AD4:  						Wait  1`
 1AE0:  					EndLoop
 1AE8:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1B48:  				Switch  *Var0 
 1B54:  					Case  ==  00000004 
 1B60:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1B78:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1B94:  						Set   *Var4  0000000F 
 1BA4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1BC0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C00:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1C1C:  						Set   *Var4  0000000F 
 1C2C:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1C48:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C88:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1CA4:  						Set   *Var4  0000000F 
 1CB4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1CD0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1D08:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1D28:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1D40:  				Switch  *Var0 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1D74:  						Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 00000032 )
 1D90:  						Wait  50`
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1DC4:  						Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 00000028 )
 1DE0:  						Wait  40`
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1E14:  						Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 0000001E )
 1E30:  						Wait  30`
 1E3C:  				EndSwitch
 1E44:  				Call  SetAnimation  ( .Actor:Self 00000001 00660320 )
 1E5C:  				Wait  10`
 1E68:  				Call  SetAnimation  ( .Actor:Self 00000001 00660305 )
 1E80:  				Wait  30`
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1EC0:  		Switch  *Var0 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1EF4:  				Set   *Var2  0000000F 
 1F04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1F20:  				Call  SetAnimation  ( .Actor:Self 00000001 00660303 )
 1F38:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 1F50:  				Call  SetAnimation  ( .Actor:Self 00000001 0066031F )
 1F68:  				Wait  10`
 1F74:  				Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
 1F88:  				Call  SetAnimation  ( .Actor:Self 00000001 00660307 )
 1FA0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1FBC:  				Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 0000001E )
 1FD8:  				Wait  30`
 1FE4:  				Thread
 1FEC:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 2010:  					Switch  *Var0 
 201C:  						Case  ==  .HitResult:Lucky % 5
 2028:  							Wait  20`
 2034:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  .HitResult:Miss % 6
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label  0
 2088:  					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 20A4:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 20C0:  					If  *Var0  >  *Var3 
 20D0:  						Wait  1`
 20DC:  						Goto  0
 20E8:  					EndIf
 20F0:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 2104:  					Call  SetGoalToTarget   ( .Actor:Self )
 2114:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call  UseBattleCamPreset    ( 00000002 )
 2154:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 2168:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 2184:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 2198:  				Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
 21AC:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 21C8:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 21E4:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 21FC:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 2210:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set   *Var0  00000000 
 225C:  					Loop  00000028 
 2268:  						Sub   *Var0  0000002D 
 2278:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 2298:  						Wait  1`
 22A4:  					EndLoop
 22AC:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 2310:  				Set   *Var2  0000000F 
 2320:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 233C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 2350:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 2370:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 238C:  				Call  $Function_80218438_07 ( *Var0 *Var1 *Var2 0000001E )
 23A8:  				Wait  30`
 23B4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
 23CC:  				Wait  10`
 23D8:  				Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
 23EC:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 2400:  				Call  SetAnimation  ( .Actor:Self 00000001 0066031B )
 2418:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 2434:  				Sub   *Var0  00000016 
 2444:  				Add   *Var1  00000013 
 2454:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait  30`
 24A4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660303 )
 24BC:  				Call  SetGoalToHome ( .Actor:Self )
 24CC:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 24E4:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 24FC:  				ConstAND  *Var0 FFFFFDFF 
 250C:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End
}

#new:DefenseTable $DefenseTable_80228500_07 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8022850C_07 {
.Element:Normal 00000000
.Element:End
}

#new:IdleAnimations $IdleAnimations_80228610_07 {
.Status:Normal    00660104
.Status:Stone     00660100
.Status:Sleep     00660115
.Status:Poison    00660100
.Status:Stop      00660100
.Status:Static    00660100
.Status:Paralyze  00660100
.Status:Paralyze  00660100
.Status:Dizzy     00660118
.Status:Dizzy     00660118
.Status:End
}

#new:IdleAnimations $IdleAnimations_80228664_07 {
.Status:Normal    00660105
.Status:Stone     00660101
.Status:Poison    00660101
.Status:Stop      00660101
.Status:Static    00660101
.Status:Paralyze  00660101
.Status:Paralyze  00660101
.Status:End
}

#new:IdleAnimations $IdleAnimations_802286A0_07 {
.Status:Normal    0066010D
.Status:Stone     00660101
.Status:Poison    00660101
.Status:Stop      00660101
.Status:Static    00660101
.Status:Paralyze  00660101
.Status:Paralyze  00660101
.Status:End
}

#new:IdleAnimations $IdleAnimations_802286DC_07 {
.Status:Normal    0066010C
.Status:Stone     00660117
.Status:Sleep     00660117
.Status:Poison    00660117
.Status:Stop      00660117
.Status:Static    00660117
.Status:Paralyze  00660117
.Status:Paralyze  00660117
.Status:Dizzy     00660122
.Status:Dizzy     00660122
.Status:End
}

#new:IdleAnimations $IdleAnimations_80228730_07 {
.Status:Normal    0066010A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022873C_07 {
.Status:Normal    0066010C
.Status:End
}

#new:Script:Battle $Script_80228748_07 {
        UseArray  $ActorIDs_Ninja
    0:  Call  SetOwnerID        ( .Actor:KoopaR )
   10:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   24:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Switch  *VarA 
   64:  	Case  ==  00000000 
   70:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   88:  		Switch  *Var0 
   94:  			Case  ==  00000003 
   A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228610_07 )
   B8:  				Call  SetAnimation      ( .Actor:Self 00000001 00660104 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228664_07 )
  10C:  				Call  SetAnimation      ( .Actor:Self 00000001 00660105 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  158:  		Switch  *Var0 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait  5`
  1A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286A0_07 )
  1B8:  				Call  SetAnimation      ( .Actor:Self 00000001 0066010D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  204:  		Switch  *Var0 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var0  00000001 
  250:  				SetConst  *Var1  0066010B 
  260:  				ExecWait  DoNormalHit 
  26C:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  284:  				ConstAND  *Var0 000000C0 
  294:  				If  *Var0  !=  000000C0 
  2A4:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286A0_07 )
  2BC:  					Call  SetAnimation      ( .Actor:Self 00000001 0066010D )
  2D4:  				Else
  2DC:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730_07 )
  2F4:  					Call  SetAnimation      ( .Actor:Self 00000001 0066010A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  348:  		Switch  *Var0 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call  $Function_80219308_07 ( 0000000E )
  394:  				SetConst  *Var0  00000001 
  3A4:  				SetConst  *Var1  0066010E 
  3B4:  				SetConst  *Var2  FFFFFFFF 
  3C4:  				ExecWait  DoBurnHit 
  3D0:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  3E8:  				ConstAND  *Var0 000000C0 
  3F8:  				If  *Var0  !=  000000C0 
  408:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286A0_07 )
  420:  					Call  SetAnimation      ( .Actor:Self 00000001 0066010D )
  438:  				Else
  440:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730_07 )
  458:  					Call  SetAnimation      ( .Actor:Self 00000001 0066010A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4AC:  		Switch  *Var0 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var0  00000001 
  4D4:  				SetConst  *Var1  00660108 
  4E4:  				ExecWait  DoImmune 
  4F0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var0  00000001 
  53C:  				SetConst  *Var1  0066011F 
  54C:  				ExecWait  DoImmune 
  558:  				Call  SetAnimation  ( .Actor:Self 00000001 00660120 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait  15`
  58C:  	Case  ==  00000005 
  598:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5B0:  		Switch  *Var0 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set   *Flag[00]  .False 
  5FC:  				If  *Var0  ==  00000003 
  60C:  					Set   *Flag[00]  .True 
  61C:  				EndIf
  624:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  638:  				Call  $Function_80218D70_07 ( *Var0 *Var1 *Var2 )
  650:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066010A )
  684:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730_07 )
  69C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  6BC:  				If  *Flag[00]  ==  .True 
  6CC:  					Call  $Function_80218BA0_07 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call  SetAnimation  ( .Actor:Self 00000001 0066010C )
  72C:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022873C_07 )
  744:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  764:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  784:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  79C:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7D4:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  				Call  HPBarToHome   ( .Actor:Self )
  800:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286DC_07 )
  818:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022850C_07 )
  830:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  848:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  860:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  8B0:  		Switch  *Var0 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set   *Flag[00]  .False 
  8FC:  				If  *Var0  ==  00000003 
  90C:  					Set   *Flag[00]  .True 
  91C:  				EndIf
  924:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  938:  				Call  $Function_80218D70_07 ( *Var0 *Var1 *Var2 )
  950:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  96C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066010E )
  984:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228730_07 )
  99C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  9BC:  				If  *Flag[00]  ==  .True 
  9CC:  					Call  $Function_80218BA0_07 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A30:  				Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  A48:  				DivF  *Var3  *Fixed[2.0] 
  A58:  				AddF  *Var1  *Var3 
  A68:  				AddF  *Var2  *Fixed[5.0] 
  A78:  				DivF  *Var3  *Fixed[10.0] 
  A88:  				Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066010C )
  AE4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022873C_07 )
  AFC:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  B1C:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  B3C:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  B54:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  B70:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B8C:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  BA8:  				Call  HPBarToHome   ( .Actor:Self )
  BB8:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286DC_07 )
  BD0:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022850C_07 )
  BE8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  C00:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  C18:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C68:  		Switch  *Var0 
  C74:  			Case  ==  00000001 
  C80:  				Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  C98:  				Sub   *Var0  00000001 
  CA8:  				If  *Var0  >  00000000 
  CB8:  					Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
  CD0:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait  20`
  CF8:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait  12`
  D40:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D58:  					Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D74:  					Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set   *Var0  00000000 
  DA0:  						Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop  00000004 
  DC8:  							Add   *Var0  00000016 
  DD8:  							Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  DF4:  							Wait  1`
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  E2C:  					Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  E40:  					Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E5C:  					Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
  E7C:  					Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  E90:  					Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
  EFC:  					Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80228500_07 )
  F14:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80228610_07 )
  F2C:  					Call  SetAnimation      ( .Actor:Self 00000001 00660104 )
  F44:  					Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait  20`
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FA0:  		Switch  *Var0 
  FAC:  			Case  ==  00000002 
  FB8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FFC:  		Switch  *Var0 
 1008:  			Case  ==  00000003 
 1014:  				Call  SetAnimation  ( .Actor:Self 00000001 00660108 )
 102C:  				Wait  10`
 1038:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1050:  				Switch  *Var0 
 105C:  					Case  ==  00000004 
 1068:  						Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660107 )
 10DC:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 10F8:  				Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 0000003C )
 1114:  				Wait  60`
 1120:  				Thread
 1128:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 114C:  					Switch  *Var0 
 1158:  						Case  ==  .HitResult:Lucky % 5
 1164:  							Wait  20`
 1170:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  .HitResult:Miss % 6
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call  GetActorVar   ( .Actor:FakeBowser 00000004 *VarA )
 11D0:  					Label  0
 11DC:  					Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
 11F8:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 1214:  					If  *Var0  >  *Var3 
 1224:  						Wait  1`
 1230:  						Goto  0
 123C:  					EndIf
 1244:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 1258:  					Call  SetGoalToTarget   ( .Actor:Self )
 1268:  					Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var1 )
 1280:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 *Var1 00000020 )
 12A8:  				EndThread
 12B0:  				Call  UseBattleCamPreset    ( 00000002 )
 12C0:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 12D4:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 12F0:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 1304:  				Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var0 )
 131C:  				Switch  *Var0 
 1328:  					Case  ==  00000004 
 1334:  						Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 13AC:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 13C8:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 13E0:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 13F4:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set   *Var0  00000000 
 1440:  					Loop  00000028 
 144C:  						Sub   *Var0  0000002D 
 145C:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 147C:  						Wait  1`
 1488:  					EndLoop
 1490:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 14F0:  				Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 150C:  				Set   *Var4  0000000F 
 151C:  				Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1538:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *VarB )
 1550:  				Set   *Var0  *VarB 
 1560:  				Sub   *Var0  00000001 
 1570:  				Mul   *Var0  00000012 
 1580:  				Switch  *VarB 
 158C:  					Case  ==  00000004 
 1598:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1620:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1640:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1658:  				Switch  *Var0 
 1664:  					Case  ==  00000004 
 1670:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 168C:  						Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 0000003C )
 16A8:  						Wait  60`
 16B4:  					Case  ==  00000003 
 16C0:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 16DC:  						Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 00000032 )
 16F8:  						Wait  50`
 1704:  					Case  ==  00000002 
 1710:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 172C:  						Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 00000028 )
 1748:  						Wait  40`
 1754:  				EndSwitch
 175C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
 1774:  				Wait  10`
 1780:  				Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
 1794:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 17A8:  				Call  SetAnimation  ( .Actor:Self 00000001 0066011B )
 17C0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 17DC:  				Sub   *Var0  00000016 
 17EC:  				Add   *Var1  00000013 
 17FC:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait  30`
 184C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660104 )
 1864:  				Wait  20`
 1870:  				Call  SetActorVar   ( .Actor:FakeBowser 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066011F )
 18C4:  				Wait  10`
 18D0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660107 )
 18E8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1904:  				Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 0000003C )
 1920:  				Wait  60`
 192C:  				Call  EnableActorBlur       ( .Actor:Self 00000001 )
 1940:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1958:  				Switch  *Var0 
 1964:  					Case  ==  00000004 
 1970:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 19E8:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 1A04:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 1A20:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 1A38:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 1A4C:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set   *Var0  00000000 
 1A98:  					Loop  00000028 
 1AA4:  						Sub   *Var0  0000002D 
 1AB4:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 1AD4:  						Wait  1`
 1AE0:  					EndLoop
 1AE8:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1B48:  				Switch  *Var0 
 1B54:  					Case  ==  00000004 
 1B60:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1B78:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1B94:  						Set   *Var4  0000000F 
 1BA4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1BC0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C00:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1C1C:  						Set   *Var4  0000000F 
 1C2C:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1C48:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C88:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1CA4:  						Set   *Var4  0000000F 
 1CB4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1CD0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1D08:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1D28:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1D40:  				Switch  *Var0 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1D74:  						Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 00000032 )
 1D90:  						Wait  50`
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1DC4:  						Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 00000028 )
 1DE0:  						Wait  40`
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1E14:  						Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 0000001E )
 1E30:  						Wait  30`
 1E3C:  				EndSwitch
 1E44:  				Call  SetAnimation  ( .Actor:Self 00000001 00660120 )
 1E5C:  				Wait  10`
 1E68:  				Call  SetAnimation  ( .Actor:Self 00000001 00660105 )
 1E80:  				Wait  30`
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1EC0:  		Switch  *Var0 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1EF4:  				Set   *Var2  0000000F 
 1F04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1F20:  				Call  SetAnimation  ( .Actor:Self 00000001 00660103 )
 1F38:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 1F50:  				Call  SetAnimation  ( .Actor:Self 00000001 0066011F )
 1F68:  				Wait  10`
 1F74:  				Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
 1F88:  				Call  SetAnimation  ( .Actor:Self 00000001 00660107 )
 1FA0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1FBC:  				Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 0000001E )
 1FD8:  				Wait  30`
 1FE4:  				Thread
 1FEC:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 2010:  					Switch  *Var0 
 201C:  						Case  ==  .HitResult:Lucky % 5
 2028:  							Wait  20`
 2034:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  .HitResult:Miss % 6
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label  0
 2088:  					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 20A4:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 20C0:  					If  *Var0  >  *Var3 
 20D0:  						Wait  1`
 20DC:  						Goto  0
 20E8:  					EndIf
 20F0:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 2104:  					Call  SetGoalToTarget   ( .Actor:Self )
 2114:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call  UseBattleCamPreset    ( 00000002 )
 2154:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 2168:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 2184:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 2198:  				Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
 21AC:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 21C8:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 21E4:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 21FC:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 2210:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set   *Var0  00000000 
 225C:  					Loop  00000028 
 2268:  						Sub   *Var0  0000002D 
 2278:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 2298:  						Wait  1`
 22A4:  					EndLoop
 22AC:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 2310:  				Set   *Var2  0000000F 
 2320:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 233C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 2350:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 2370:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 238C:  				Call  $Function_80218BF8_07 ( *Var0 *Var1 *Var2 0000001E )
 23A8:  				Wait  30`
 23B4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
 23CC:  				Wait  10`
 23D8:  				Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
 23EC:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 2400:  				Call  SetAnimation  ( .Actor:Self 00000001 0066011B )
 2418:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 2434:  				Sub   *Var0  00000016 
 2444:  				Add   *Var1  00000013 
 2454:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait  30`
 24A4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660103 )
 24BC:  				Call  SetGoalToHome ( .Actor:Self )
 24CC:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 24E4:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 24FC:  				ConstAND  *Var0 FFFFFDFF 
 250C:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End
}

#new:DefenseTable $DefenseTable_8022B4A0_07 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8022B4AC_07 {
.Element:Normal 00000000
.Element:End
}

#new:IdleAnimations $IdleAnimations_8022B5B0_07 {
.Status:Normal    00660004
.Status:Stone     00660000
.Status:Sleep     00660015
.Status:Poison    00660000
.Status:Stop      00660000
.Status:Static    00660000
.Status:Paralyze  00660000
.Status:Paralyze  00660000
.Status:Dizzy     00660018
.Status:Dizzy     00660018
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B604_07 {
.Status:Normal    00660005
.Status:Stone     00660001
.Status:Poison    00660001
.Status:Stop      00660001
.Status:Static    00660001
.Status:Paralyze  00660001
.Status:Paralyze  00660001
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B640_07 {
.Status:Normal    0066000D
.Status:Stone     00660001
.Status:Poison    00660001
.Status:Stop      00660001
.Status:Static    00660001
.Status:Paralyze  00660001
.Status:Paralyze  00660001
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B67C_07 {
.Status:Normal    0066000C
.Status:Stone     00660017
.Status:Sleep     00660017
.Status:Poison    00660017
.Status:Stop      00660017
.Status:Static    00660017
.Status:Paralyze  00660017
.Status:Paralyze  00660017
.Status:Dizzy     00660022
.Status:Dizzy     00660022
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B6D0_07 {
.Status:Normal    0066000A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022B6DC_07 {
.Status:Normal    0066000C
.Status:End
}

#new:Script:Battle $Script_8022B6E8_07 {
        UseArray  $ActorIDs_Ninja
    0:  Call  SetOwnerID        ( .Actor:KoopaB )
   10:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   24:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Switch  *VarA 
   64:  	Case  ==  00000000 
   70:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   88:  		Switch  *Var0 
   94:  			Case  ==  00000003 
   A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B5B0_07 )
   B8:  				Call  SetAnimation      ( .Actor:Self 00000001 00660004 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B604_07 )
  10C:  				Call  SetAnimation      ( .Actor:Self 00000001 00660005 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  158:  		Switch  *Var0 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait  5`
  1A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B640_07 )
  1B8:  				Call  SetAnimation      ( .Actor:Self 00000001 0066000D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  204:  		Switch  *Var0 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var0  00000001 
  250:  				SetConst  *Var1  0066000B 
  260:  				ExecWait  DoNormalHit 
  26C:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  284:  				ConstAND  *Var0 000000C0 
  294:  				If  *Var0  !=  000000C0 
  2A4:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B640_07 )
  2BC:  					Call  SetAnimation      ( .Actor:Self 00000001 0066000D )
  2D4:  				Else
  2DC:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0_07 )
  2F4:  					Call  SetAnimation      ( .Actor:Self 00000001 0066000A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  348:  		Switch  *Var0 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call  $Function_80219AC8_07 ( 0000000E )
  394:  				SetConst  *Var0  00000001 
  3A4:  				SetConst  *Var1  0066000E 
  3B4:  				SetConst  *Var2  FFFFFFFF 
  3C4:  				ExecWait  DoBurnHit 
  3D0:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  3E8:  				ConstAND  *Var0 000000C0 
  3F8:  				If  *Var0  !=  000000C0 
  408:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B640_07 )
  420:  					Call  SetAnimation      ( .Actor:Self 00000001 0066000D )
  438:  				Else
  440:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0_07 )
  458:  					Call  SetAnimation      ( .Actor:Self 00000001 0066000A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4AC:  		Switch  *Var0 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var0  00000001 
  4D4:  				SetConst  *Var1  00660008 
  4E4:  				ExecWait  DoImmune 
  4F0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var0  00000001 
  53C:  				SetConst  *Var1  0066001F 
  54C:  				ExecWait  DoImmune 
  558:  				Call  SetAnimation  ( .Actor:Self 00000001 00660020 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait  15`
  58C:  	Case  ==  00000005 
  598:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5B0:  		Switch  *Var0 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set   *Flag[00]  .False 
  5FC:  				If  *Var0  ==  00000003 
  60C:  					Set   *Flag[00]  .True 
  61C:  				EndIf
  624:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  638:  				Call  $Function_80219530_07 ( *Var0 *Var1 *Var2 )
  650:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066000A )
  684:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0_07 )
  69C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  6BC:  				If  *Flag[00]  ==  .True 
  6CC:  					Call  $Function_80219360_07 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
  72C:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6DC_07 )
  744:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  764:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  784:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  79C:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7D4:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  				Call  HPBarToHome   ( .Actor:Self )
  800:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C_07 )
  818:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC_07 )
  830:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  848:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  860:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  8B0:  		Switch  *Var0 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set   *Flag[00]  .False 
  8FC:  				If  *Var0  ==  00000003 
  90C:  					Set   *Flag[00]  .True 
  91C:  				EndIf
  924:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  938:  				Call  $Function_80219530_07 ( *Var0 *Var1 *Var2 )
  950:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  96C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066000E )
  984:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6D0_07 )
  99C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  9BC:  				If  *Flag[00]  ==  .True 
  9CC:  					Call  $Function_80219360_07 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A30:  				Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  A48:  				DivF  *Var3  *Fixed[2.0] 
  A58:  				AddF  *Var1  *Var3 
  A68:  				AddF  *Var2  *Fixed[5.0] 
  A78:  				DivF  *Var3  *Fixed[10.0] 
  A88:  				Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
  AE4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B6DC_07 )
  AFC:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  B1C:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  B3C:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  B54:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  B70:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B8C:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  BA8:  				Call  HPBarToHome   ( .Actor:Self )
  BB8:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C_07 )
  BD0:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC_07 )
  BE8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  C00:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  C18:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C68:  		Switch  *Var0 
  C74:  			Case  ==  00000001 
  C80:  				Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  C98:  				Sub   *Var0  00000001 
  CA8:  				If  *Var0  >  00000000 
  CB8:  					Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
  CD0:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait  20`
  CF8:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait  12`
  D40:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D58:  					Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D74:  					Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set   *Var0  00000000 
  DA0:  						Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop  00000004 
  DC8:  							Add   *Var0  00000016 
  DD8:  							Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  DF4:  							Wait  1`
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  E2C:  					Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  E40:  					Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E5C:  					Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
  E7C:  					Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  E90:  					Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
  EFC:  					Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4A0_07 )
  F14:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B5B0_07 )
  F2C:  					Call  SetAnimation      ( .Actor:Self 00000001 00660004 )
  F44:  					Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait  20`
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FA0:  		Switch  *Var0 
  FAC:  			Case  ==  00000002 
  FB8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FFC:  		Switch  *Var0 
 1008:  			Case  ==  00000003 
 1014:  				Call  SetAnimation  ( .Actor:Self 00000001 00660008 )
 102C:  				Wait  10`
 1038:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1050:  				Switch  *Var0 
 105C:  					Case  ==  00000004 
 1068:  						Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660007 )
 10DC:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 10F8:  				Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 0000003C )
 1114:  				Wait  60`
 1120:  				Thread
 1128:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 114C:  					Switch  *Var0 
 1158:  						Case  ==  .HitResult:Lucky % 5
 1164:  							Wait  20`
 1170:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  .HitResult:Miss % 6
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call  GetActorVar   ( .Actor:FakeBowser 00000004 *VarA )
 11D0:  					Label  0
 11DC:  					Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
 11F8:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 1214:  					If  *Var0  >  *Var3 
 1224:  						Wait  1`
 1230:  						Goto  0
 123C:  					EndIf
 1244:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 1258:  					Call  SetGoalToTarget   ( .Actor:Self )
 1268:  					Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var1 )
 1280:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 *Var1 00000020 )
 12A8:  				EndThread
 12B0:  				Call  UseBattleCamPreset    ( 00000002 )
 12C0:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 12D4:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 12F0:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 1304:  				Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var0 )
 131C:  				Switch  *Var0 
 1328:  					Case  ==  00000004 
 1334:  						Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 13AC:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 13C8:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 13E0:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 13F4:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set   *Var0  00000000 
 1440:  					Loop  00000028 
 144C:  						Sub   *Var0  0000002D 
 145C:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 147C:  						Wait  1`
 1488:  					EndLoop
 1490:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 14F0:  				Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 150C:  				Set   *Var4  0000000F 
 151C:  				Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1538:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *VarB )
 1550:  				Set   *Var0  *VarB 
 1560:  				Sub   *Var0  00000001 
 1570:  				Mul   *Var0  00000012 
 1580:  				Switch  *VarB 
 158C:  					Case  ==  00000004 
 1598:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1620:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1640:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1658:  				Switch  *Var0 
 1664:  					Case  ==  00000004 
 1670:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 168C:  						Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 0000003C )
 16A8:  						Wait  60`
 16B4:  					Case  ==  00000003 
 16C0:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 16DC:  						Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 00000032 )
 16F8:  						Wait  50`
 1704:  					Case  ==  00000002 
 1710:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 172C:  						Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 00000028 )
 1748:  						Wait  40`
 1754:  				EndSwitch
 175C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
 1774:  				Wait  10`
 1780:  				Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
 1794:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 17A8:  				Call  SetAnimation  ( .Actor:Self 00000001 0066001B )
 17C0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 17DC:  				Sub   *Var0  00000016 
 17EC:  				Add   *Var1  00000013 
 17FC:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait  30`
 184C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660004 )
 1864:  				Wait  20`
 1870:  				Call  SetActorVar   ( .Actor:FakeBowser 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066001F )
 18C4:  				Wait  10`
 18D0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660007 )
 18E8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1904:  				Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 0000003C )
 1920:  				Wait  60`
 192C:  				Call  EnableActorBlur       ( .Actor:Self 00000001 )
 1940:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1958:  				Switch  *Var0 
 1964:  					Case  ==  00000004 
 1970:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 19E8:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 1A04:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 1A20:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 1A38:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 1A4C:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set   *Var0  00000000 
 1A98:  					Loop  00000028 
 1AA4:  						Sub   *Var0  0000002D 
 1AB4:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 1AD4:  						Wait  1`
 1AE0:  					EndLoop
 1AE8:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1B48:  				Switch  *Var0 
 1B54:  					Case  ==  00000004 
 1B60:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1B78:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1B94:  						Set   *Var4  0000000F 
 1BA4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1BC0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C00:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1C1C:  						Set   *Var4  0000000F 
 1C2C:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1C48:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C88:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1CA4:  						Set   *Var4  0000000F 
 1CB4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1CD0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1D08:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1D28:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1D40:  				Switch  *Var0 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1D74:  						Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 00000032 )
 1D90:  						Wait  50`
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1DC4:  						Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 00000028 )
 1DE0:  						Wait  40`
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1E14:  						Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 0000001E )
 1E30:  						Wait  30`
 1E3C:  				EndSwitch
 1E44:  				Call  SetAnimation  ( .Actor:Self 00000001 00660020 )
 1E5C:  				Wait  10`
 1E68:  				Call  SetAnimation  ( .Actor:Self 00000001 00660005 )
 1E80:  				Wait  30`
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1EC0:  		Switch  *Var0 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1EF4:  				Set   *Var2  0000000F 
 1F04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1F20:  				Call  SetAnimation  ( .Actor:Self 00000001 00660003 )
 1F38:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 1F50:  				Call  SetAnimation  ( .Actor:Self 00000001 0066001F )
 1F68:  				Wait  10`
 1F74:  				Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
 1F88:  				Call  SetAnimation  ( .Actor:Self 00000001 00660007 )
 1FA0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1FBC:  				Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 0000001E )
 1FD8:  				Wait  30`
 1FE4:  				Thread
 1FEC:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 2010:  					Switch  *Var0 
 201C:  						Case  ==  .HitResult:Lucky % 5
 2028:  							Wait  20`
 2034:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  .HitResult:Miss % 6
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label  0
 2088:  					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 20A4:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 20C0:  					If  *Var0  >  *Var3 
 20D0:  						Wait  1`
 20DC:  						Goto  0
 20E8:  					EndIf
 20F0:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 2104:  					Call  SetGoalToTarget   ( .Actor:Self )
 2114:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call  UseBattleCamPreset    ( 00000002 )
 2154:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 2168:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 2184:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 2198:  				Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
 21AC:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 21C8:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 21E4:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 21FC:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 2210:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set   *Var0  00000000 
 225C:  					Loop  00000028 
 2268:  						Sub   *Var0  0000002D 
 2278:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 2298:  						Wait  1`
 22A4:  					EndLoop
 22AC:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 2310:  				Set   *Var2  0000000F 
 2320:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 233C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 2350:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 2370:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 238C:  				Call  $Function_802193B8_07 ( *Var0 *Var1 *Var2 0000001E )
 23A8:  				Wait  30`
 23B4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
 23CC:  				Wait  10`
 23D8:  				Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
 23EC:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 2400:  				Call  SetAnimation  ( .Actor:Self 00000001 0066001B )
 2418:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 2434:  				Sub   *Var0  00000016 
 2444:  				Add   *Var1  00000013 
 2454:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait  30`
 24A4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660003 )
 24BC:  				Call  SetGoalToHome ( .Actor:Self )
 24CC:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 24E4:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 24FC:  				ConstAND  *Var0 FFFFFDFF 
 250C:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End
}

#new:DefenseTable $DefenseTable_8022E440_07 {
.Element:Normal 00000001
.Element:End
}

#new:DefenseTable $DefenseTable_8022E44C_07 {
.Element:Normal 00000000
.Element:End
}

#new:IdleAnimations $IdleAnimations_8022E550_07 {
.Status:Normal    00660204
.Status:Stone     00660200
.Status:Sleep     00660215
.Status:Poison    00660200
.Status:Stop      00660200
.Status:Static    00660200
.Status:Paralyze  00660200
.Status:Paralyze  00660200
.Status:Dizzy     00660218
.Status:Dizzy     00660218
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E5A4_07 {
.Status:Normal    00660205
.Status:Stone     00660201
.Status:Poison    00660201
.Status:Stop      00660201
.Status:Static    00660201
.Status:Paralyze  00660201
.Status:Paralyze  00660201
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E5E0_07 {
.Status:Normal    0066020D
.Status:Stone     00660201
.Status:Poison    00660201
.Status:Stop      00660201
.Status:Static    00660201
.Status:Paralyze  00660201
.Status:Paralyze  00660201
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E61C_07 {
.Status:Normal    0066020C
.Status:Stone     00660217
.Status:Sleep     00660217
.Status:Poison    00660217
.Status:Stop      00660217
.Status:Static    00660217
.Status:Paralyze  00660217
.Status:Paralyze  00660217
.Status:Dizzy     00660222
.Status:Dizzy     00660222
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E670_07 {
.Status:Normal    0066020A
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E67C_07 {
.Status:Normal    0066020C
.Status:End
}

#new:Script:Battle $Script_8022E688_07 {
        UseArray  $ActorIDs_Ninja
    0:  Call  SetOwnerID        ( .Actor:KoopaY )
   10:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   24:  If  *Var0  !=  ~Flags:StatusFlags:0 % 0
   34:  	Return
   3C:  EndIf
   44:  Call  UseIdleAnimation  ( .Actor:Self .False )
   58:  Switch  *VarA 
   64:  	Case  ==  00000000 
   70:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   88:  		Switch  *Var0 
   94:  			Case  ==  00000003 
   A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E550_07 )
   B8:  				Call  SetAnimation      ( .Actor:Self 00000001 00660204 )
   D0:  			CaseOR  ==  00000004 
   DC:  			CaseOR  ==  00000005 
   E8:  			CaseOR  ==  00000006 
   F4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5A4_07 )
  10C:  				Call  SetAnimation      ( .Actor:Self 00000001 00660205 )
  124:  			EndCaseGroup
  12C:  		EndSwitch
  134:  	Case  ==  00000001 
  140:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  158:  		Switch  *Var0 
  164:  			CaseOR  ==  00000003 
  170:  			CaseOR  ==  00000004 
  17C:  			CaseOR  ==  00000005 
  188:  			CaseOR  ==  00000006 
  194:  				Wait  5`
  1A0:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5E0_07 )
  1B8:  				Call  SetAnimation      ( .Actor:Self 00000001 0066020D )
  1D0:  			EndCaseGroup
  1D8:  		EndSwitch
  1E0:  	Case  ==  00000002 
  1EC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  204:  		Switch  *Var0 
  210:  			CaseOR  ==  00000003 
  21C:  			CaseOR  ==  00000004 
  228:  			CaseOR  ==  00000005 
  234:  			CaseOR  ==  00000006 
  240:  				SetConst  *Var0  00000001 
  250:  				SetConst  *Var1  0066020B 
  260:  				ExecWait  DoNormalHit 
  26C:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  284:  				ConstAND  *Var0 000000C0 
  294:  				If  *Var0  !=  000000C0 
  2A4:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5E0_07 )
  2BC:  					Call  SetAnimation      ( .Actor:Self 00000001 0066020D )
  2D4:  				Else
  2DC:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670_07 )
  2F4:  					Call  SetAnimation      ( .Actor:Self 00000001 0066020A )
  30C:  				EndIf
  314:  			EndCaseGroup
  31C:  		EndSwitch
  324:  	Case  ==  00000003 
  330:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  348:  		Switch  *Var0 
  354:  			CaseOR  ==  00000003 
  360:  			CaseOR  ==  00000004 
  36C:  			CaseOR  ==  00000005 
  378:  			CaseOR  ==  00000006 
  384:  				Call  $Function_8021A288_07 ( 0000000E )
  394:  				SetConst  *Var0  00000001 
  3A4:  				SetConst  *Var1  0066020E 
  3B4:  				SetConst  *Var2  FFFFFFFF 
  3C4:  				ExecWait  DoBurnHit 
  3D0:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
  3E8:  				ConstAND  *Var0 000000C0 
  3F8:  				If  *Var0  !=  000000C0 
  408:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E5E0_07 )
  420:  					Call  SetAnimation      ( .Actor:Self 00000001 0066020D )
  438:  				Else
  440:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670_07 )
  458:  					Call  SetAnimation      ( .Actor:Self 00000001 0066020A )
  470:  				EndIf
  478:  			EndCaseGroup
  480:  		EndSwitch
  488:  	Case  ==  00000004 
  494:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4AC:  		Switch  *Var0 
  4B8:  			Case  ==  00000003 
  4C4:  				SetConst  *Var0  00000001 
  4D4:  				SetConst  *Var1  00660208 
  4E4:  				ExecWait  DoImmune 
  4F0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
  508:  			CaseOR  ==  00000004 
  514:  			CaseOR  ==  00000005 
  520:  			CaseOR  ==  00000006 
  52C:  				SetConst  *Var0  00000001 
  53C:  				SetConst  *Var1  0066021F 
  54C:  				ExecWait  DoImmune 
  558:  				Call  SetAnimation  ( .Actor:Self 00000001 00660220 )
  570:  			EndCaseGroup
  578:  		EndSwitch
  580:  		Wait  15`
  58C:  	Case  ==  00000005 
  598:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5B0:  		Switch  *Var0 
  5BC:  			CaseOR  ==  00000003 
  5C8:  			CaseOR  ==  00000004 
  5D4:  			CaseOR  ==  00000005 
  5E0:  			CaseOR  ==  00000006 
  5EC:  				Set   *Flag[00]  .False 
  5FC:  				If  *Var0  ==  00000003 
  60C:  					Set   *Flag[00]  .True 
  61C:  				EndIf
  624:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  638:  				Call  $Function_80219CF0_07 ( *Var0 *Var1 *Var2 )
  650:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  66C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066020A )
  684:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670_07 )
  69C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  6BC:  				If  *Flag[00]  ==  .True 
  6CC:  					Call  $Function_80219B20_07 ( 00000100 00000005 )
  6E0:  					Thread
  6E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  704:  					EndThread
  70C:  				EndIf
  714:  				Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
  72C:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E67C_07 )
  744:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  764:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  784:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  79C:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  7B8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7D4:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  7F0:  				Call  HPBarToHome   ( .Actor:Self )
  800:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C_07 )
  818:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C_07 )
  830:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  848:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  860:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  87C:  			EndCaseGroup
  884:  		EndSwitch
  88C:  	Case  ==  00000006 
  898:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  8B0:  		Switch  *Var0 
  8BC:  			CaseOR  ==  00000003 
  8C8:  			CaseOR  ==  00000004 
  8D4:  			CaseOR  ==  00000005 
  8E0:  			CaseOR  ==  00000006 
  8EC:  				Set   *Flag[00]  .False 
  8FC:  				If  *Var0  ==  00000003 
  90C:  					Set   *Flag[00]  .True 
  91C:  				EndIf
  924:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  938:  				Call  $Function_80219CF0_07 ( *Var0 *Var1 *Var2 )
  950:  				Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  96C:  				Call  SetAnimation      ( .Actor:Self 00000001 0066020E )
  984:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E670_07 )
  99C:  				Call  JumpToGoal        ( .Actor:Self 00000014 .False .True .False )
  9BC:  				If  *Flag[00]  ==  .True 
  9CC:  					Call  $Function_80219B20_07 ( 00000100 00000005 )
  9E0:  					Thread
  9E8:  						Call  ShakeCam  ( .Cam:Battle 00000000 00000005 *Fixed[0.8] )
  A04:  					EndThread
  A0C:  				EndIf
  A14:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A30:  				Call  GetActorSize  ( .Actor:Self *Var3 *Var4 )
  A48:  				DivF  *Var3  *Fixed[2.0] 
  A58:  				AddF  *Var1  *Var3 
  A68:  				AddF  *Var2  *Fixed[5.0] 
  A78:  				DivF  *Var3  *Fixed[10.0] 
  A88:  				Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  ACC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
  AE4:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E67C_07 )
  AFC:  				Call  JumpToGoal    ( .Actor:Self 0000000A .False .True .False )
  B1C:  				Call  JumpToGoal    ( .Actor:Self 00000005 .False .True .False )
  B3C:  				Call  SetActorFlagBits  ( .Actor:Self 00040000 .False )
  B54:  				Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .False )
  B70:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B8C:  				Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
  BA8:  				Call  HPBarToHome   ( .Actor:Self )
  BB8:  				Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C_07 )
  BD0:  				Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C_07 )
  BE8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  C00:  				Call  SetActorVar   ( .Actor:Self 00000002 00000002 )
  C18:  				Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  C34:  			EndCaseGroup
  C3C:  		EndSwitch
  C44:  	Case  ==  00000009 
  C50:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C68:  		Switch  *Var0 
  C74:  			Case  ==  00000001 
  C80:  				Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  C98:  				Sub   *Var0  00000001 
  CA8:  				If  *Var0  >  00000000 
  CB8:  					Call  SetActorVar   ( .Actor:Self 00000002 *Var0 )
  CD0:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  CEC:  					Wait  20`
  CF8:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D10:  				Else
  D18:  					Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  D34:  					Wait  12`
  D40:  					Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  D58:  					Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  D74:  					Call  PlaySoundAtActor      ( .Actor:Self .Sound:Jump )
  D88:  					Thread
  D90:  						Set   *Var0  00000000 
  DA0:  						Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000012 00000000 )
  DBC:  						Loop  00000004 
  DC8:  							Add   *Var0  00000016 
  DD8:  							Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  DF4:  							Wait  1`
  E00:  						EndLoop
  E08:  					EndThread
  E10:  					Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  E2C:  					Call  SetActorJumpGravity       ( .Actor:Self *Fixed[3.0] )
  E40:  					Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E5C:  					Call  JumpToGoal        ( .Actor:Self 00000008 .False .True .False )
  E7C:  					Call  PlaySoundAtActor  ( .Actor:Self 000020BA )
  E90:  					Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  EAC:  					Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  EC8:  					Call  SetTargetOffset   ( .Actor:Self 00000001 FFFFFFFB 00000024 )
  EE4:  					Call  SetActorVar       ( .Actor:Self 00000001 00000002 )
  EFC:  					Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E440_07 )
  F14:  					Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E550_07 )
  F2C:  					Call  SetAnimation      ( .Actor:Self 00000001 00660204 )
  F44:  					Call  ResetActorSounds  ( .Actor:Self .ActorSound:Jump )
  F58:  				EndIf
  F60:  			Default
  F68:  				Wait  20`
  F74:  		EndSwitch
  F7C:  	Case  ==  0000000A 
  F88:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FA0:  		Switch  *Var0 
  FAC:  			Case  ==  00000002 
  FB8:  				Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
  FD0:  		EndSwitch
  FD8:  	Case  ==  00000007 
  FE4:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  FFC:  		Switch  *Var0 
 1008:  			Case  ==  00000003 
 1014:  				Call  SetAnimation  ( .Actor:Self 00000001 00660208 )
 102C:  				Wait  10`
 1038:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1050:  				Switch  *Var0 
 105C:  					Case  ==  00000004 
 1068:  						Call  PlaySoundAtActor  ( .Actor:Self 00000356 )
 107C:  					Case  ==  00000003 
 1088:  						Call  PlaySoundAtActor  ( .Actor:Self 00000355 )
 109C:  					Case  ==  00000002 
 10A8:  						Call  PlaySoundAtActor  ( .Actor:Self 00000354 )
 10BC:  				EndSwitch
 10C4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660207 )
 10DC:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 10F8:  				Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 0000003C )
 1114:  				Wait  60`
 1120:  				Thread
 1128:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 114C:  					Switch  *Var0 
 1158:  						Case  ==  .HitResult:Lucky % 5
 1164:  							Wait  20`
 1170:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 1194:  							Return
 119C:  						Case  ==  .HitResult:Miss % 6
 11A8:  							Return
 11B0:  					EndSwitch
 11B8:  					Call  GetActorVar   ( .Actor:FakeBowser 00000004 *VarA )
 11D0:  					Label  0
 11DC:  					Call  GetActorPos   ( *VarA *Var0 *Var1 *Var2 )
 11F8:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 1214:  					If  *Var0  >  *Var3 
 1224:  						Wait  1`
 1230:  						Goto  0
 123C:  					EndIf
 1244:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 1258:  					Call  SetGoalToTarget   ( .Actor:Self )
 1268:  					Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var1 )
 1280:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 *Var1 00000020 )
 12A8:  				EndThread
 12B0:  				Call  UseBattleCamPreset    ( 00000002 )
 12C0:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 12D4:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 12F0:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 1304:  				Call  GetActorVar       ( .Actor:FakeBowser 00000003 *Var0 )
 131C:  				Switch  *Var0 
 1328:  					Case  ==  00000004 
 1334:  						Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
 1348:  					Case  ==  00000003 
 1354:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1368:  					Case  ==  00000002 
 1374:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 1388:  				EndSwitch
 1390:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 13AC:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 13C8:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 13E0:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 13F4:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1408:  				Thread
 1410:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1430:  					Set   *Var0  00000000 
 1440:  					Loop  00000028 
 144C:  						Sub   *Var0  0000002D 
 145C:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 147C:  						Wait  1`
 1488:  					EndLoop
 1490:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14B0:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 14D0:  				EndThread
 14D8:  				Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 14F0:  				Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 150C:  				Set   *Var4  0000000F 
 151C:  				Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1538:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *VarB )
 1550:  				Set   *Var0  *VarB 
 1560:  				Sub   *Var0  00000001 
 1570:  				Mul   *Var0  00000012 
 1580:  				Switch  *VarB 
 158C:  					Case  ==  00000004 
 1598:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF6 )
 15B4:  					Case  ==  00000003 
 15C0:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFF9 )
 15DC:  					Case  ==  00000002 
 15E8:  						Call  AddGoalPos    ( .Actor:Self 00000000 *Var0 FFFFFFFC )
 1604:  				EndSwitch
 160C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1620:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1640:  				Call  GetActorVar   ( .Actor:FakeBowser 00000003 *Var0 )
 1658:  				Switch  *Var0 
 1664:  					Case  ==  00000004 
 1670:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 168C:  						Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 0000003C )
 16A8:  						Wait  60`
 16B4:  					Case  ==  00000003 
 16C0:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 16DC:  						Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 00000032 )
 16F8:  						Wait  50`
 1704:  					Case  ==  00000002 
 1710:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 172C:  						Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 00000028 )
 1748:  						Wait  40`
 1754:  				EndSwitch
 175C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
 1774:  				Wait  10`
 1780:  				Call  PlaySoundAtActor  ( .Actor:Self 000020F3 )
 1794:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 17A8:  				Call  SetAnimation  ( .Actor:Self 00000001 0066021B )
 17C0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 17DC:  				Sub   *Var0  00000016 
 17EC:  				Add   *Var1  00000013 
 17FC:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 1840:  				Wait  30`
 184C:  				Call  SetAnimation  ( .Actor:Self 00000001 00660204 )
 1864:  				Wait  20`
 1870:  				Call  SetActorVar   ( .Actor:FakeBowser 00000001 00000000 )
 1888:  			CaseOR  ==  00000004 
 1894:  			CaseOR  ==  00000005 
 18A0:  			CaseOR  ==  00000006 
 18AC:  				Call  SetAnimation  ( .Actor:Self 00000001 0066021F )
 18C4:  				Wait  10`
 18D0:  				Call  SetAnimation  ( .Actor:Self 00000001 00660207 )
 18E8:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1904:  				Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 0000003C )
 1920:  				Wait  60`
 192C:  				Call  EnableActorBlur       ( .Actor:Self 00000001 )
 1940:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1958:  				Switch  *Var0 
 1964:  					Case  ==  00000004 
 1970:  						Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
 1984:  					Case  ==  00000005 
 1990:  						Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
 19A4:  					Case  ==  00000006 
 19B0:  						Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
 19C4:  				EndSwitch
 19CC:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 19E8:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 1A04:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 1A20:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 1A38:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 1A4C:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 1A60:  				Thread
 1A68:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 1A88:  					Set   *Var0  00000000 
 1A98:  					Loop  00000028 
 1AA4:  						Sub   *Var0  0000002D 
 1AB4:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 1AD4:  						Wait  1`
 1AE0:  					EndLoop
 1AE8:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B08:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 1B28:  				EndThread
 1B30:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1B48:  				Switch  *Var0 
 1B54:  					Case  ==  00000004 
 1B60:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1B78:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1B94:  						Set   *Var4  0000000F 
 1BA4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1BC0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000024 FFFFFFF9 )
 1BDC:  					Case  ==  00000005 
 1BE8:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C00:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1C1C:  						Set   *Var4  0000000F 
 1C2C:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1C48:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000012 FFFFFFFC )
 1C64:  					Case  ==  00000006 
 1C70:  						Call  GetActorVar   ( .Actor:FakeBowser 00000004 *Var1 )
 1C88:  						Call  GetHomePos    ( *Var1 *Var2 *Var3 *Var4 )
 1CA4:  						Set   *Var4  0000000F 
 1CB4:  						Call  SetGoalPos    ( .Actor:Self *Var2 *Var3 *Var4 )
 1CD0:  						Call  AddGoalPos    ( .Actor:Self 00000000 00000000 00000000 )
 1CEC:  				EndSwitch
 1CF4:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 1D08:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 1D28:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1D40:  				Switch  *Var0 
 1D4C:  					Case  ==  00000004 
 1D58:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1D74:  						Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 00000032 )
 1D90:  						Wait  50`
 1D9C:  					Case  ==  00000005 
 1DA8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1DC4:  						Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 00000028 )
 1DE0:  						Wait  40`
 1DEC:  					Case  ==  00000006 
 1DF8:  						Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1E14:  						Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 0000001E )
 1E30:  						Wait  30`
 1E3C:  				EndSwitch
 1E44:  				Call  SetAnimation  ( .Actor:Self 00000001 00660220 )
 1E5C:  				Wait  10`
 1E68:  				Call  SetAnimation  ( .Actor:Self 00000001 00660205 )
 1E80:  				Wait  30`
 1E8C:  			EndCaseGroup
 1E94:  		EndSwitch
 1E9C:  	Case  ==  00000008 
 1EA8:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
 1EC0:  		Switch  *Var0 
 1ECC:  			Case  ==  00000000 
 1ED8:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1EF4:  				Set   *Var2  0000000F 
 1F04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 1F20:  				Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
 1F38:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 1F50:  				Call  SetAnimation  ( .Actor:Self 00000001 0066021F )
 1F68:  				Wait  10`
 1F74:  				Call  PlaySoundAtActor      ( .Actor:Self 00000353 )
 1F88:  				Call  SetAnimation  ( .Actor:Self 00000001 00660207 )
 1FA0:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 1FBC:  				Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 0000001E )
 1FD8:  				Wait  30`
 1FE4:  				Thread
 1FEC:  					Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000010 )
 2010:  					Switch  *Var0 
 201C:  						Case  ==  .HitResult:Lucky % 5
 2028:  							Wait  20`
 2034:  							Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 2058:  							Return
 2060:  						Case  ==  .HitResult:Miss % 6
 206C:  							Return
 2074:  					EndSwitch
 207C:  					Label  0
 2088:  					Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 20A4:  					Call  GetActorPos   ( .Actor:Player *Var3 *Var4 *Var5 )
 20C0:  					If  *Var0  >  *Var3 
 20D0:  						Wait  1`
 20DC:  						Goto  0
 20E8:  					EndIf
 20F0:  					Call  SetTargetActor    ( .Actor:Self .Actor:Player )
 2104:  					Call  SetGoalToTarget   ( .Actor:Self )
 2114:  					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
 213C:  				EndThread
 2144:  				Call  UseBattleCamPreset    ( 00000002 )
 2154:  				Call  PlaySoundAtActor  ( .Actor:Self 0000037C )
 2168:  				Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
 2184:  				Call  EnableActorBlur   ( .Actor:Self 00000001 )
 2198:  				Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
 21AC:  				Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 21C8:  				Call  SetGoalPos        ( .Actor:Self FFFFFF60 *Var1 *Var2 )
 21E4:  				Call  RunToGoal ( .Actor:Self 00000000 .False )
 21FC:  				Call  ResetActorSounds  ( .Actor:Self .ActorSound:Walk )
 2210:  				Call  EnableActorBlur   ( .Actor:Self 00000000 )
 2224:  				Thread
 222C:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 0000000F 00000000 )
 224C:  					Set   *Var0  00000000 
 225C:  					Loop  00000028 
 2268:  						Sub   *Var0  0000002D 
 2278:  						Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
 2298:  						Wait  1`
 22A4:  					EndLoop
 22AC:  					Call  SetPartRotationOffset ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22CC:  					Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 00000000 )
 22EC:  				EndThread
 22F4:  				Call  GetHomePos    ( .Actor:Self *Var0 *Var1 *Var2 )
 2310:  				Set   *Var2  0000000F 
 2320:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
 233C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
 2350:  				Call  JumpToGoal    ( .Actor:Self 00000028 .False .True .False )
 2370:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 238C:  				Call  $Function_80219B78_07 ( *Var0 *Var1 *Var2 0000001E )
 23A8:  				Wait  30`
 23B4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
 23CC:  				Wait  10`
 23D8:  				Call  PlaySoundAtActor      ( .Actor:Self 000020F3 )
 23EC:  				Call  SetActorYaw   ( .Actor:Self 00000000 )
 2400:  				Call  SetAnimation  ( .Actor:Self 00000001 0066021B )
 2418:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 2434:  				Sub   *Var0  00000016 
 2444:  				Add   *Var1  00000013 
 2454:  				Call  PlayEffect    ( ~FX:LensFlare:Rotating *Var0 *Var1 *Var2 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
 2498:  				Wait  30`
 24A4:  				Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
 24BC:  				Call  SetGoalToHome ( .Actor:Self )
 24CC:  				Call  RunToGoal     ( .Actor:Self 0000000A .False )
 24E4:  				Call  GetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 24FC:  				ConstAND  *Var0 FFFFFDFF 
 250C:  				Call  SetActorVar   ( .Actor:FakeBowser 00000000 *Var0 )
 2524:  		EndSwitch
 252C:  EndSwitch
 2534:  Return
 253C:  End
}

%============================
% Koopas actor data

#export:Actor $2F_YNinjakoopa {
% stats
[Index]        9Eb 
[Level]        0`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022E458_07 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022E504_07 
[Script]      $Script_Init_80230BCC_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_8022E458_07 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8022E504_07 {
00800000 01000000 FB2400FF $IdleAnimations_8022E550_07 $DefenseTable_8022E440_07 00001000 00000000 00000000 00000000 
}

#new:Script:Battle $Script_Init_80230BCC_07 {
        UseArray $ActorIDs_Ninja
        Call     $GetActorSelfID ( *Var0 )
        Set      .Actor:KoopaY *Var0
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802313B4_07 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80230CC0_07 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80230D28_07 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802313C4_07 )
   98:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   B4:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End
}

#new:Script:Battle $Script_Idle_80230CC0_07 {
    0:  Return
    8:  End
}

#new:IntTable $IntTable_80230CD0_07 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script:Battle $Script_HandleEvent_80230D28_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0066020B 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0066020E 
   C0:  		SetConst  *Var2  0066020F 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
                  Set .Actor:KoopaY -1
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0066020E 
  108:  		SetConst  *Var2  0066020F 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  0066020F 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001 
  174:  		SetConst  *Var1  0066020B 
  184:  		ExecWait  DoSpinSmashHit 
  190:  	Case  ==  .Event:SpinSmashDeath % 21
                  Set .Actor:KoopaY -1
  19C:  		SetConst  *Var0  00000001 
  1AC:  		SetConst  *Var1  0066020B 
  1BC:  		ExecWait  DoSpinSmashHit 
  1C8:  		SetConst  *Var0  00000001 
  1D8:  		SetConst  *Var1  0066020B 
  1E8:  		ExecWait  DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger % D
  208:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  220:  		Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C_07 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C_07 )
  268:  		Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  29C:  		If  *Var0  ==  00000000 
  2AC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066020B )
  2C4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait  4`
  2F4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait  1`
  31C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait  1`
  344:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait  1`
  36C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait  1`
  394:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait  1`
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer  $IntTable_80230CD0_07 
  3F8:  		Loop  00000016 
  404:  			Get1Int  *Var0 
  410:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  42C:  			Wait  1`
  438:  		EndLoop
  440:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017 % 17
  484:  	CaseOR  ==  .Event:Immune % 19
  490:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4A8:  		If  *Var0  ==  00000000 
  4B8:  			SetConst  *Var0  00000001 
  4C8:  			SetConst  *Var1  00660208 
  4D8:  			ExecWait  DoImmune 
  4E4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4F8:  			If  *Var0  ==  ~Flags:StatusFlags:0 % 0
  508:  				Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
  520:  				Wait  10`
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var0  00000001 
  54C:  			SetConst  *Var1  0066020C 
  55C:  			ExecWait  DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death % 20
                  Set .Actor:KoopaY -1
  584:  		SetConst  *Var0  00000001 
  594:  		SetConst  *Var1  0066020B 
  5A4:  		ExecWait  DoNormalHit 
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		SetConst  *Var1  0066020B 
  5D0:  		ExecWait  DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus % 31
  5F0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  608:  		If  *Var0  ==  00000000 
  618:  			SetConst  *Var0  00000001 
  628:  			SetConst  *Var1  00660204 
  638:  			ExecWait  DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Script:Battle $Script_TakeTurn_802313B4_07 {
    0:  Return
    8:  End
}

#new:Script:Battle $Script_NextTurn_802313C4_07 {
    0:  Return
    8:  End
}

%

#export:Actor $2F_BNinjakoopa {
% stats
[Index]        9Db 
[Level]        0`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022B4B8_07 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_8022B564_07 
[Script]      $Script_Init_8022DC2C_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_8022B4B8_07 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_8022B564_07 {
00800000 01000000 FB2400FF $IdleAnimations_8022B5B0_07 $DefenseTable_8022B4A0_07 00001000 00000000 00000000 00000000 
}

#new:Script:Battle $Script_Init_8022DC2C_07 {
        UseArray $ActorIDs_Ninja
        Call     $GetActorSelfID ( *Var0 )
        Set      .Actor:KoopaB *Var0
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022E414_07 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022DD20_07 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022DD88_07 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022E424_07 )
   98:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   B4:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End
}

#new:Script:Battle $Script_Idle_8022DD20_07 {
    0:  Return
    8:  End
}

#new:IntTable $IntTable_8022DD30_07 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script:Battle $Script_HandleEvent_8022DD88_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0066000B 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0066000E 
   C0:  		SetConst  *Var2  0066000F 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
                  Set .Actor:KoopaB -1
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0066000E 
  108:  		SetConst  *Var2  0066000F 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  0066000F 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001 
  174:  		SetConst  *Var1  0066000B 
  184:  		ExecWait  DoSpinSmashHit 
  190:  	Case  ==  .Event:SpinSmashDeath % 21
                  Set .Actor:KoopaB -1
  19C:  		SetConst  *Var0  00000001 
  1AC:  		SetConst  *Var1  0066000B 
  1BC:  		ExecWait  DoSpinSmashHit 
  1C8:  		SetConst  *Var0  00000001 
  1D8:  		SetConst  *Var1  0066000B 
  1E8:  		ExecWait  DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger % D
  208:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  220:  		Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022B67C_07 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022B4AC_07 )
  268:  		Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  29C:  		If  *Var0  ==  00000000 
  2AC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066000B )
  2C4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait  4`
  2F4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait  1`
  31C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait  1`
  344:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait  1`
  36C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait  1`
  394:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait  1`
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066000C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer  $IntTable_8022DD30_07 
  3F8:  		Loop  00000016 
  404:  			Get1Int  *Var0 
  410:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  42C:  			Wait  1`
  438:  		EndLoop
  440:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017 % 17
  484:  	CaseOR  ==  .Event:Immune % 19
  490:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4A8:  		If  *Var0  ==  00000000 
  4B8:  			SetConst  *Var0  00000001 
  4C8:  			SetConst  *Var1  00660008 
  4D8:  			ExecWait  DoImmune 
  4E4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4F8:  			If  *Var0  ==  ~Flags:StatusFlags:0 % 0
  508:  				Call  SetAnimation  ( .Actor:Self 00000001 00660009 )
  520:  				Wait  10`
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var0  00000001 
  54C:  			SetConst  *Var1  0066000C 
  55C:  			ExecWait  DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death % 20
                  Set .Actor:KoopaB -1
  584:  		SetConst  *Var0  00000001 
  594:  		SetConst  *Var1  0066000B 
  5A4:  		ExecWait  DoNormalHit 
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		SetConst  *Var1  0066000B 
  5D0:  		ExecWait  DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus % 31
  5F0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  608:  		If  *Var0  ==  00000000 
  618:  			SetConst  *Var0  00000001 
  628:  			SetConst  *Var1  00660004 
  638:  			ExecWait  DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Script:Battle $Script_TakeTurn_8022E414_07 {
    0:  Return
    8:  End
}

#new:Script:Battle $Script_NextTurn_8022E424_07 {
    0:  Return
    8:  End
}

%

#export:Actor $2F_GNinjakoopa {
% stats
[Index]        9Bb 
[Level]        0`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80225578_07 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_80225624_07 
[Script]      $Script_Init_80227CEC_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_80225578_07 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      45`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_80225624_07 {
00800000 01000000 FB2400FF $IdleAnimations_80225670_07 $DefenseTable_80225560_07 00001000 00000000 00000000 00000000 
}

#new:Script:Battle $Script_Init_80227CEC_07 {
        UseArray $ActorIDs_Ninja
        Call     $GetActorSelfID ( *Var0 )
        Set      .Actor:KoopaG *Var0
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802284D4_07 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227DE0_07 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80227E48_07 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_802284E4_07 )
   98:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   B4:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End
}

#new:Script:Battle $Script_Idle_80227DE0_07 {
    0:  Return
    8:  End
}

#new:IntTable $IntTable_80227DF0_07 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script:Battle $Script_HandleEvent_80227E48_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0066030B 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0066030E 
   C0:  		SetConst  *Var2  0066030F 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
                  Set .Actor:KoopaG -1
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0066030E 
  108:  		SetConst  *Var2  0066030F 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  0066030F 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001 
  174:  		SetConst  *Var1  0066030B 
  184:  		ExecWait  DoSpinSmashHit 
  190:  	Case  ==  .Event:SpinSmashDeath % 21
                  Set .Actor:KoopaG -1
  19C:  		SetConst  *Var0  00000001 
  1AC:  		SetConst  *Var1  0066030B 
  1BC:  		ExecWait  DoSpinSmashHit 
  1C8:  		SetConst  *Var0  00000001 
  1D8:  		SetConst  *Var1  0066030B 
  1E8:  		ExecWait  DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger % D
  208:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  220:  		Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022573C_07 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022556C_07 )
  268:  		Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  29C:  		If  *Var0  ==  00000000 
  2AC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066030B )
  2C4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait  4`
  2F4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait  1`
  31C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait  1`
  344:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait  1`
  36C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait  1`
  394:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait  1`
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066030C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer  $IntTable_80227DF0_07 
  3F8:  		Loop  00000016 
  404:  			Get1Int  *Var0 
  410:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  42C:  			Wait  1`
  438:  		EndLoop
  440:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017 % 17
  484:  	CaseOR  ==  .Event:Immune % 19
  490:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4A8:  		If  *Var0  ==  00000000 
  4B8:  			SetConst  *Var0  00000001 
  4C8:  			SetConst  *Var1  00660308 
  4D8:  			ExecWait  DoImmune 
  4E4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4F8:  			If  *Var0  ==  ~Flags:StatusFlags:0 % 0
  508:  				Call  SetAnimation  ( .Actor:Self 00000001 00660309 )
  520:  				Wait  10`
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var0  00000001 
  54C:  			SetConst  *Var1  0066030C 
  55C:  			ExecWait  DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death % 20
                  Set .Actor:KoopaG -1
  584:  		SetConst  *Var0  00000001 
  594:  		SetConst  *Var1  0066030B 
  5A4:  		ExecWait  DoNormalHit 
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		SetConst  *Var1  0066030B 
  5D0:  		ExecWait  DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus % 31
  5F0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  608:  		If  *Var0  ==  00000000 
  618:  			SetConst  *Var0  00000001 
  628:  			SetConst  *Var1  00660304 
  638:  			ExecWait  DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Script:Battle $Script_TakeTurn_802284D4_07 {
    0:  Return
    8:  End
}

#new:Script:Battle $Script_NextTurn_802284E4_07 {
    0:  Return
    8:  End
}

%

#export:Actor $2F_RNinjakoopa {
% stats
[Index]        9Cb 
[Level]        0`b 
[MaxHP]         5`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80228518_07 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_802285C4_07 
[Script]      $Script_Init_8022AC8C_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_80228518_07 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      30`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_802285C4_07 {
00800000 01000000 FB2400FF $IdleAnimations_80228610_07 $DefenseTable_80228500_07 00001000 00000000 00000000 00000000 
}

#new:Script:Battle $Script_Init_8022AC8C_07 {
        UseArray $ActorIDs_Ninja
        Call     $GetActorSelfID ( *Var0 )
        Set      .Actor:KoopaR *Var0
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B474_07 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022AD80_07 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADE8_07 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022B484_07 )
   98:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00020000 .True )
   B4:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End
}

#new:Script:Battle $Script_Idle_8022AD80_07 {
    0:  Return
    8:  End
}

#new:IntTable $IntTable_8022AD90_07 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script:Battle $Script_HandleEvent_8022ADE8_07 {
        UseArray $ActorIDs_Ninja
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0066010B 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0066010E 
   C0:  		SetConst  *Var2  0066010F 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
                  Set .Actor:KoopaR -1
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0066010E 
  108:  		SetConst  *Var2  0066010F 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  0066010F 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001 
  174:  		SetConst  *Var1  0066010B 
  184:  		ExecWait  DoSpinSmashHit 
  190:  	Case  ==  .Event:SpinSmashDeath % 21
                  Set .Actor:KoopaR -1
  19C:  		SetConst  *Var0  00000001 
  1AC:  		SetConst  *Var1  0066010B 
  1BC:  		ExecWait  DoSpinSmashHit 
  1C8:  		SetConst  *Var0  00000001 
  1D8:  		SetConst  *Var1  0066010B 
  1E8:  		ExecWait  DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger % D
  208:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  220:  		Call  SetActorVar       ( .Actor:Self 00000002 00000002 )
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_802286DC_07 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022850C_07 )
  268:  		Call  SetTargetOffset   ( .Actor:Self 00000001 00000000 00000012 )
  284:  		Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  29C:  		If  *Var0  ==  00000000 
  2AC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066010B )
  2C4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait  4`
  2F4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait  1`
  31C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait  1`
  344:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait  1`
  36C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait  1`
  394:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait  1`
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066010C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer  $IntTable_8022AD90_07 
  3F8:  		Loop  00000016 
  404:  			Get1Int  *Var0 
  410:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  42C:  			Wait  1`
  438:  		EndLoop
  440:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017 % 17
  484:  	CaseOR  ==  .Event:Immune % 19
  490:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4A8:  		If  *Var0  ==  00000000 
  4B8:  			SetConst  *Var0  00000001 
  4C8:  			SetConst  *Var1  00660108 
  4D8:  			ExecWait  DoImmune 
  4E4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4F8:  			If  *Var0  ==  ~Flags:StatusFlags:0 % 0
  508:  				Call  SetAnimation  ( .Actor:Self 00000001 00660109 )
  520:  				Wait  10`
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var0  00000001 
  54C:  			SetConst  *Var1  0066010C 
  55C:  			ExecWait  DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death % 20
                  Set .Actor:KoopaR -1
  584:  		SetConst  *Var0  00000001 
  594:  		SetConst  *Var1  0066010B 
  5A4:  		ExecWait  DoNormalHit 
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		SetConst  *Var1  0066010B 
  5D0:  		ExecWait  DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus % 31
  5F0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  608:  		If  *Var0  ==  00000000 
  618:  			SetConst  *Var0  00000001 
  628:  			SetConst  *Var1  00660104 
  638:  			ExecWait  DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Script:Battle $Script_TakeTurn_8022B474_07 {
    0:  Return
    8:  End
}

#new:Script:Battle $Script_NextTurn_8022B484_07 {
    0:  Return
    8:  End
}
